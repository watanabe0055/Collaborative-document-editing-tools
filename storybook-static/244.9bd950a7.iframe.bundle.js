/*! For license information please see 244.9bd950a7.iframe.bundle.js.LICENSE.txt */
(self.webpackChunkCollaborative_document_editing_tools=self.webpackChunkCollaborative_document_editing_tools||[]).push([[244],{"./node_modules/@radix-ui/react-label/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{b:()=>dist_Root});var react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),dist=(__webpack_require__("./node_modules/next/dist/compiled/react-dom/index.js"),__webpack_require__("./node_modules/@radix-ui/react-slot/dist/index.mjs")),jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),Primitive=["a","button","div","form","h2","h3","img","input","label","li","nav","ol","p","span","svg","ul"].reduce(((primitive,node)=>{const Node=react.forwardRef(((props,forwardedRef)=>{const{asChild,...primitiveProps}=props,Comp=asChild?dist.DX:node;return"undefined"!=typeof window&&(window[Symbol.for("radix-ui")]=!0),(0,jsx_runtime.jsx)(Comp,{...primitiveProps,ref:forwardedRef})}));return Node.displayName=`Primitive.${node}`,{...primitive,[node]:Node}}),{});var Label=react.forwardRef(((props,forwardedRef)=>(0,jsx_runtime.jsx)(Primitive.label,{...props,ref:forwardedRef,onMouseDown:event=>{event.target.closest("button, input, select, textarea")||(props.onMouseDown?.(event),!event.defaultPrevented&&event.detail>1&&event.preventDefault())}})));Label.displayName="Label";var dist_Root=Label},"./node_modules/@storybook/nextjs/dist/export-mocks/headers/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{UL:()=>cookies,b3:()=>headers});__webpack_require__("./node_modules/@storybook/nextjs/dist/chunk-42AJV46F.mjs");var headersAdapterMock,_storybook_test__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/test/dist/index.mjs"),next_dist_server_request_draft_mode__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/next/dist/server/request/draft-mode.js"),next_dist_server_request_headers__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/next/dist/server/request/headers.js"),next_dist_server_web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/next/dist/server/web/spec-extension/adapters/headers.js"),_storybook_nextjs_headers_mock__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@storybook/nextjs/dist/export-mocks/headers/index.mjs"),next_dist_compiled_edge_runtime_cookies__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/next/dist/compiled/@edge-runtime/cookies/index.js"),HeadersAdapterMock=class extends next_dist_server_web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_4__.HeadersAdapter{constructor(){super({}),this.append=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.fn)(super.append.bind(this)).mockName("next/headers::headers().append"),this.delete=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.fn)(super.delete.bind(this)).mockName("next/headers::headers().delete"),this.get=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.fn)(super.get.bind(this)).mockName("next/headers::headers().get"),this.has=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.fn)(super.has.bind(this)).mockName("next/headers::headers().has"),this.set=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.fn)(super.set.bind(this)).mockName("next/headers::headers().set"),this.forEach=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.fn)(super.forEach.bind(this)).mockName("next/headers::headers().forEach"),this.entries=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.fn)(super.entries.bind(this)).mockName("next/headers::headers().entries"),this.keys=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.fn)(super.keys.bind(this)).mockName("next/headers::headers().keys"),this.values=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.fn)(super.values.bind(this)).mockName("next/headers::headers().values")}},headers=()=>(headersAdapterMock||(headersAdapterMock=new HeadersAdapterMock),headersAdapterMock);headers.mockRestore=()=>{headersAdapterMock=new HeadersAdapterMock};var requestCookiesMock,RequestCookiesMock=class extends next_dist_compiled_edge_runtime_cookies__WEBPACK_IMPORTED_MODULE_6__.RequestCookies{constructor(){super(...arguments),this.get=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.fn)(super.get.bind(this)).mockName("next/headers::cookies().get"),this.getAll=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.fn)(super.getAll.bind(this)).mockName("next/headers::cookies().getAll"),this.has=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.fn)(super.has.bind(this)).mockName("next/headers::cookies().has"),this.set=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.fn)(super.set.bind(this)).mockName("next/headers::cookies().set"),this.delete=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.fn)(super.delete.bind(this)).mockName("next/headers::cookies().delete")}},cookies=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.fn)((()=>(requestCookiesMock||(requestCookiesMock=new RequestCookiesMock((0,_storybook_nextjs_headers_mock__WEBPACK_IMPORTED_MODULE_5__.b3)())),requestCookiesMock))).mockName("next/headers::cookies()"),originalRestore=cookies.mockRestore.bind(null);cookies.mockRestore=()=>{originalRestore(),_storybook_nextjs_headers_mock__WEBPACK_IMPORTED_MODULE_5__.b3.mockRestore(),requestCookiesMock=new RequestCookiesMock((0,_storybook_nextjs_headers_mock__WEBPACK_IMPORTED_MODULE_5__.b3)())};(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.fn)(next_dist_server_request_draft_mode__WEBPACK_IMPORTED_MODULE_2__.r??next_dist_server_request_headers__WEBPACK_IMPORTED_MODULE_3__.draftMode).mockName("draftMode")},"./node_modules/lucide-react/dist/esm/icons/circle-alert.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{A:()=>CircleAlert});const CircleAlert=(0,__webpack_require__("./node_modules/lucide-react/dist/esm/createLucideIcon.js").A)("circle-alert",[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}],["line",{x1:"12",x2:"12",y1:"8",y2:"12",key:"1pkeuh"}],["line",{x1:"12",x2:"12.01",y1:"16",y2:"16",key:"4dfq90"}]])},"./node_modules/next/dist/client/get-domain-locale.js":(module,exports,__webpack_require__)=>{"use strict";var process=__webpack_require__("./node_modules/process/browser.js");Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"getDomainLocale",{enumerable:!0,get:function(){return getDomainLocale}});const _normalizetrailingslash=__webpack_require__("./node_modules/next/dist/client/normalize-trailing-slash.js"),basePath=process.env.__NEXT_ROUTER_BASEPATH||"";function getDomainLocale(path,locale,locales,domainLocales){if(process.env.__NEXT_I18N_SUPPORT){const normalizeLocalePath=__webpack_require__("./node_modules/next/dist/client/normalize-locale-path.js").normalizeLocalePath,detectDomainLocale=__webpack_require__("./node_modules/next/dist/client/detect-domain-locale.js").detectDomainLocale,target=locale||normalizeLocalePath(path,locales).detectedLocale,domain=detectDomainLocale(domainLocales,void 0,target);if(domain){const proto="http"+(domain.http?"":"s")+"://",finalLocale=target===domain.defaultLocale?"":"/"+target;return""+proto+domain.domain+(0,_normalizetrailingslash.normalizePathTrailingSlash)(""+basePath+finalLocale+path)}return!1}return!1}("function"==typeof exports.default||"object"==typeof exports.default&&null!==exports.default)&&void 0===exports.default.__esModule&&(Object.defineProperty(exports.default,"__esModule",{value:!0}),Object.assign(exports.default,exports),module.exports=exports.default)},"./node_modules/next/dist/client/link.js":(module,exports,__webpack_require__)=>{var process=__webpack_require__("./node_modules/process/browser.js");Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"default",{enumerable:!0,get:function(){return _default}});const _interop_require_default=__webpack_require__("./node_modules/@swc/helpers/cjs/_interop_require_default.cjs"),_jsxruntime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),_react=_interop_require_default._(__webpack_require__("./node_modules/next/dist/compiled/react/index.js")),_resolvehref=__webpack_require__("./node_modules/next/dist/client/resolve-href.js"),_islocalurl=__webpack_require__("./node_modules/next/dist/shared/lib/router/utils/is-local-url.js"),_formaturl=__webpack_require__("./node_modules/next/dist/shared/lib/router/utils/format-url.js"),_utils=__webpack_require__("./node_modules/next/dist/shared/lib/utils.js"),_addlocale=__webpack_require__("./node_modules/next/dist/client/add-locale.js"),_routercontextsharedruntime=__webpack_require__("./node_modules/next/dist/shared/lib/router-context.shared-runtime.js"),_useintersection=__webpack_require__("./node_modules/next/dist/client/use-intersection.js"),_getdomainlocale=__webpack_require__("./node_modules/next/dist/client/get-domain-locale.js"),_addbasepath=__webpack_require__("./node_modules/next/dist/client/add-base-path.js"),_usemergedref=__webpack_require__("./node_modules/next/dist/client/use-merged-ref.js"),prefetched=new Set;function prefetch(router,href,as,options){if("undefined"!=typeof window&&(0,_islocalurl.isLocalURL)(href)){if(!options.bypassPrefetchedCheck){const prefetchedKey=href+"%"+as+"%"+(void 0!==options.locale?options.locale:"locale"in router?router.locale:void 0);if(prefetched.has(prefetchedKey))return;prefetched.add(prefetchedKey)}router.prefetch(href,as,options).catch((err=>{0}))}}function formatStringOrUrl(urlObjOrString){return"string"==typeof urlObjOrString?urlObjOrString:(0,_formaturl.formatUrl)(urlObjOrString)}const _default=_react.default.forwardRef((function LinkComponent(props,forwardedRef){let children;const{href:hrefProp,as:asProp,children:childrenProp,prefetch:prefetchProp=null,passHref,replace,shallow,scroll,locale,onClick,onMouseEnter:onMouseEnterProp,onTouchStart:onTouchStartProp,legacyBehavior=!1,...restProps}=props;children=childrenProp,!legacyBehavior||"string"!=typeof children&&"number"!=typeof children||(children=(0,_jsxruntime.jsx)("a",{children}));const router=_react.default.useContext(_routercontextsharedruntime.RouterContext),prefetchEnabled=!1!==prefetchProp;const{href,as}=_react.default.useMemo((()=>{if(!router){const resolvedHref=formatStringOrUrl(hrefProp);return{href:resolvedHref,as:asProp?formatStringOrUrl(asProp):resolvedHref}}const[resolvedHref,resolvedAs]=(0,_resolvehref.resolveHref)(router,hrefProp,!0);return{href:resolvedHref,as:asProp?(0,_resolvehref.resolveHref)(router,asProp):resolvedAs||resolvedHref}}),[router,hrefProp,asProp]),previousHref=_react.default.useRef(href),previousAs=_react.default.useRef(as);let child;legacyBehavior&&(child=_react.default.Children.only(children));const childRef=legacyBehavior?child&&"object"==typeof child&&child.ref:forwardedRef,[setIntersectionRef,isVisible,resetVisible]=(0,_useintersection.useIntersection)({rootMargin:"200px"}),setIntersectionWithResetRef=_react.default.useCallback((el=>{previousAs.current===as&&previousHref.current===href||(resetVisible(),previousAs.current=as,previousHref.current=href),setIntersectionRef(el)}),[as,href,resetVisible,setIntersectionRef]),setRef=(0,_usemergedref.useMergedRef)(setIntersectionWithResetRef,childRef);_react.default.useEffect((()=>{router&&isVisible&&prefetchEnabled&&prefetch(router,href,as,{locale})}),[as,href,isVisible,locale,prefetchEnabled,null==router?void 0:router.locale,router]);const childProps={ref:setRef,onClick(e){legacyBehavior||"function"!=typeof onClick||onClick(e),legacyBehavior&&child.props&&"function"==typeof child.props.onClick&&child.props.onClick(e),router&&(e.defaultPrevented||function linkClicked(e,router,href,as,replace,shallow,scroll,locale){const{nodeName}=e.currentTarget;if("A"===nodeName.toUpperCase()&&(function isModifiedEvent(event){const target=event.currentTarget.getAttribute("target");return target&&"_self"!==target||event.metaKey||event.ctrlKey||event.shiftKey||event.altKey||event.nativeEvent&&2===event.nativeEvent.which}(e)||!(0,_islocalurl.isLocalURL)(href)))return;e.preventDefault(),(()=>{const routerScroll=null==scroll||scroll;"beforePopState"in router?router[replace?"replace":"push"](href,as,{shallow,locale,scroll:routerScroll}):router[replace?"replace":"push"](as||href,{scroll:routerScroll})})()}(e,router,href,as,replace,shallow,scroll,locale))},onMouseEnter(e){legacyBehavior||"function"!=typeof onMouseEnterProp||onMouseEnterProp(e),legacyBehavior&&child.props&&"function"==typeof child.props.onMouseEnter&&child.props.onMouseEnter(e),router&&prefetch(router,href,as,{locale,priority:!0,bypassPrefetchedCheck:!0})},onTouchStart:process.env.__NEXT_LINK_NO_TOUCH_START?void 0:function onTouchStart(e){legacyBehavior||"function"!=typeof onTouchStartProp||onTouchStartProp(e),legacyBehavior&&child.props&&"function"==typeof child.props.onTouchStart&&child.props.onTouchStart(e),router&&prefetch(router,href,as,{locale,priority:!0,bypassPrefetchedCheck:!0})}};if((0,_utils.isAbsoluteUrl)(as))childProps.href=as;else if(!legacyBehavior||passHref||"a"===child.type&&!("href"in child.props)){const curLocale=void 0!==locale?locale:null==router?void 0:router.locale,localeDomain=(null==router?void 0:router.isLocaleDomain)&&(0,_getdomainlocale.getDomainLocale)(as,curLocale,null==router?void 0:router.locales,null==router?void 0:router.domainLocales);childProps.href=localeDomain||(0,_addbasepath.addBasePath)((0,_addlocale.addLocale)(as,curLocale,null==router?void 0:router.defaultLocale))}return legacyBehavior?_react.default.cloneElement(child,childProps):(0,_jsxruntime.jsx)("a",{...restProps,...childProps,children})}));("function"==typeof exports.default||"object"==typeof exports.default&&null!==exports.default)&&void 0===exports.default.__esModule&&(Object.defineProperty(exports.default,"__esModule",{value:!0}),Object.assign(exports.default,exports),module.exports=exports.default)},"./node_modules/next/dist/client/normalize-locale-path.js":(module,exports,__webpack_require__)=>{"use strict";var process=__webpack_require__("./node_modules/process/browser.js");Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"normalizeLocalePath",{enumerable:!0,get:function(){return normalizeLocalePath}});const normalizeLocalePath=(pathname,locales)=>process.env.__NEXT_I18N_SUPPORT?__webpack_require__("./node_modules/next/dist/shared/lib/i18n/normalize-locale-path.js").normalizeLocalePath(pathname,locales):{pathname,detectedLocale:void 0};("function"==typeof exports.default||"object"==typeof exports.default&&null!==exports.default)&&void 0===exports.default.__esModule&&(Object.defineProperty(exports.default,"__esModule",{value:!0}),Object.assign(exports.default,exports),module.exports=exports.default)},"./node_modules/next/dist/client/use-intersection.js":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"useIntersection",{enumerable:!0,get:function(){return useIntersection}});const _react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),_requestidlecallback=__webpack_require__("./node_modules/next/dist/client/request-idle-callback.js"),hasIntersectionObserver="function"==typeof IntersectionObserver,observers=new Map,idList=[];function observe(element,callback,options){const{id,observer,elements}=function createObserver(options){const id={root:options.root||null,margin:options.rootMargin||""},existing=idList.find((obj=>obj.root===id.root&&obj.margin===id.margin));let instance;if(existing&&(instance=observers.get(existing),instance))return instance;const elements=new Map,observer=new IntersectionObserver((entries=>{entries.forEach((entry=>{const callback=elements.get(entry.target),isVisible=entry.isIntersecting||entry.intersectionRatio>0;callback&&isVisible&&callback(isVisible)}))}),options);return instance={id,observer,elements},idList.push(id),observers.set(id,instance),instance}(options);return elements.set(element,callback),observer.observe(element),function unobserve(){if(elements.delete(element),observer.unobserve(element),0===elements.size){observer.disconnect(),observers.delete(id);const index=idList.findIndex((obj=>obj.root===id.root&&obj.margin===id.margin));index>-1&&idList.splice(index,1)}}}function useIntersection(param){let{rootRef,rootMargin,disabled}=param;const isDisabled=disabled||!hasIntersectionObserver,[visible,setVisible]=(0,_react.useState)(!1),elementRef=(0,_react.useRef)(null),setElement=(0,_react.useCallback)((element=>{elementRef.current=element}),[]);(0,_react.useEffect)((()=>{if(hasIntersectionObserver){if(isDisabled||visible)return;const element=elementRef.current;if(element&&element.tagName){return observe(element,(isVisible=>isVisible&&setVisible(isVisible)),{root:null==rootRef?void 0:rootRef.current,rootMargin})}}else if(!visible){const idleCallback=(0,_requestidlecallback.requestIdleCallback)((()=>setVisible(!0)));return()=>(0,_requestidlecallback.cancelIdleCallback)(idleCallback)}}),[isDisabled,rootMargin,rootRef,visible,elementRef.current]);const resetVisible=(0,_react.useCallback)((()=>{setVisible(!1)}),[]);return[setElement,visible,resetVisible]}("function"==typeof exports.default||"object"==typeof exports.default&&null!==exports.default)&&void 0===exports.default.__esModule&&(Object.defineProperty(exports.default,"__esModule",{value:!0}),Object.assign(exports.default,exports),module.exports=exports.default)},"./node_modules/next/dist/client/use-merged-ref.js":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"useMergedRef",{enumerable:!0,get:function(){return useMergedRef}});const _react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js");function useMergedRef(refA,refB){const cleanupA=(0,_react.useRef)(null),cleanupB=(0,_react.useRef)(null);return(0,_react.useCallback)((current=>{if(null===current){const cleanupFnA=cleanupA.current;cleanupFnA&&(cleanupA.current=null,cleanupFnA());const cleanupFnB=cleanupB.current;cleanupFnB&&(cleanupB.current=null,cleanupFnB())}else refA&&(cleanupA.current=applyRef(refA,current)),refB&&(cleanupB.current=applyRef(refB,current))}),[refA,refB])}function applyRef(refA,current){if("function"==typeof refA){const cleanup=refA(current);return"function"==typeof cleanup?cleanup:()=>refA(null)}return refA.current=current,()=>{refA.current=null}}("function"==typeof exports.default||"object"==typeof exports.default&&null!==exports.default)&&void 0===exports.default.__esModule&&(Object.defineProperty(exports.default,"__esModule",{value:!0}),Object.assign(exports.default,exports),module.exports=exports.default)},"./node_modules/next/dist/compiled/@edge-runtime/cookies/index.js":module=>{"use strict";var mod,__defProp=Object.defineProperty,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropNames=Object.getOwnPropertyNames,__hasOwnProp=Object.prototype.hasOwnProperty,src_exports={};function stringifyCookie(c){var _a;const attrs=["path"in c&&c.path&&`Path=${c.path}`,"expires"in c&&(c.expires||0===c.expires)&&`Expires=${("number"==typeof c.expires?new Date(c.expires):c.expires).toUTCString()}`,"maxAge"in c&&"number"==typeof c.maxAge&&`Max-Age=${c.maxAge}`,"domain"in c&&c.domain&&`Domain=${c.domain}`,"secure"in c&&c.secure&&"Secure","httpOnly"in c&&c.httpOnly&&"HttpOnly","sameSite"in c&&c.sameSite&&`SameSite=${c.sameSite}`,"partitioned"in c&&c.partitioned&&"Partitioned","priority"in c&&c.priority&&`Priority=${c.priority}`].filter(Boolean),stringified=`${c.name}=${encodeURIComponent(null!=(_a=c.value)?_a:"")}`;return 0===attrs.length?stringified:`${stringified}; ${attrs.join("; ")}`}function parseCookie(cookie){const map=new Map;for(const pair of cookie.split(/; */)){if(!pair)continue;const splitAt=pair.indexOf("=");if(-1===splitAt){map.set(pair,"true");continue}const[key,value]=[pair.slice(0,splitAt),pair.slice(splitAt+1)];try{map.set(key,decodeURIComponent(null!=value?value:"true"))}catch{}}return map}function parseSetCookie(setCookie){if(!setCookie)return;const[[name,value],...attributes]=parseCookie(setCookie),{domain,expires,httponly,maxage,path,samesite,secure,partitioned,priority}=Object.fromEntries(attributes.map((([key,value2])=>[key.toLowerCase().replace(/-/g,""),value2])));return function compact(t){const newT={};for(const key in t)t[key]&&(newT[key]=t[key]);return newT}({name,value:decodeURIComponent(value),domain,...expires&&{expires:new Date(expires)},...httponly&&{httpOnly:!0},..."string"==typeof maxage&&{maxAge:Number(maxage)},path,...samesite&&{sameSite:parseSameSite(samesite)},...secure&&{secure:!0},...priority&&{priority:parsePriority(priority)},...partitioned&&{partitioned:!0}})}((target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})})(src_exports,{RequestCookies:()=>RequestCookies,ResponseCookies:()=>ResponseCookies,parseCookie:()=>parseCookie,parseSetCookie:()=>parseSetCookie,stringifyCookie:()=>stringifyCookie}),module.exports=(mod=src_exports,((to,from,except,desc)=>{if(from&&"object"==typeof from||"function"==typeof from)for(let key of __getOwnPropNames(from))__hasOwnProp.call(to,key)||key===except||__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to})(__defProp({},"__esModule",{value:!0}),mod));var SAME_SITE=["strict","lax","none"];function parseSameSite(string){return string=string.toLowerCase(),SAME_SITE.includes(string)?string:void 0}var PRIORITY=["low","medium","high"];function parsePriority(string){return string=string.toLowerCase(),PRIORITY.includes(string)?string:void 0}var RequestCookies=class{constructor(requestHeaders){this._parsed=new Map,this._headers=requestHeaders;const header=requestHeaders.get("cookie");if(header){const parsed=parseCookie(header);for(const[name,value]of parsed)this._parsed.set(name,{name,value})}}[Symbol.iterator](){return this._parsed[Symbol.iterator]()}get size(){return this._parsed.size}get(...args){const name="string"==typeof args[0]?args[0]:args[0].name;return this._parsed.get(name)}getAll(...args){var _a;const all=Array.from(this._parsed);if(!args.length)return all.map((([_,value])=>value));const name="string"==typeof args[0]?args[0]:null==(_a=args[0])?void 0:_a.name;return all.filter((([n])=>n===name)).map((([_,value])=>value))}has(name){return this._parsed.has(name)}set(...args){const[name,value]=1===args.length?[args[0].name,args[0].value]:args,map=this._parsed;return map.set(name,{name,value}),this._headers.set("cookie",Array.from(map).map((([_,value2])=>stringifyCookie(value2))).join("; ")),this}delete(names){const map=this._parsed,result=Array.isArray(names)?names.map((name=>map.delete(name))):map.delete(names);return this._headers.set("cookie",Array.from(map).map((([_,value])=>stringifyCookie(value))).join("; ")),result}clear(){return this.delete(Array.from(this._parsed.keys())),this}[Symbol.for("edge-runtime.inspect.custom")](){return`RequestCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`}toString(){return[...this._parsed.values()].map((v=>`${v.name}=${encodeURIComponent(v.value)}`)).join("; ")}},ResponseCookies=class{constructor(responseHeaders){var _a,_b,_c;this._parsed=new Map,this._headers=responseHeaders;const setCookie=null!=(_c=null!=(_b=null==(_a=responseHeaders.getSetCookie)?void 0:_a.call(responseHeaders))?_b:responseHeaders.get("set-cookie"))?_c:[],cookieStrings=Array.isArray(setCookie)?setCookie:function splitCookiesString(cookiesString){if(!cookiesString)return[];var start,ch,lastComma,nextStart,cookiesSeparatorFound,cookiesStrings=[],pos=0;function skipWhitespace(){for(;pos<cookiesString.length&&/\s/.test(cookiesString.charAt(pos));)pos+=1;return pos<cookiesString.length}for(;pos<cookiesString.length;){for(start=pos,cookiesSeparatorFound=!1;skipWhitespace();)if(","===(ch=cookiesString.charAt(pos))){for(lastComma=pos,pos+=1,skipWhitespace(),nextStart=pos;pos<cookiesString.length&&"="!==(ch=cookiesString.charAt(pos))&&";"!==ch&&","!==ch;)pos+=1;pos<cookiesString.length&&"="===cookiesString.charAt(pos)?(cookiesSeparatorFound=!0,pos=nextStart,cookiesStrings.push(cookiesString.substring(start,lastComma)),start=pos):pos=lastComma+1}else pos+=1;(!cookiesSeparatorFound||pos>=cookiesString.length)&&cookiesStrings.push(cookiesString.substring(start,cookiesString.length))}return cookiesStrings}(setCookie);for(const cookieString of cookieStrings){const parsed=parseSetCookie(cookieString);parsed&&this._parsed.set(parsed.name,parsed)}}get(...args){const key="string"==typeof args[0]?args[0]:args[0].name;return this._parsed.get(key)}getAll(...args){var _a;const all=Array.from(this._parsed.values());if(!args.length)return all;const key="string"==typeof args[0]?args[0]:null==(_a=args[0])?void 0:_a.name;return all.filter((c=>c.name===key))}has(name){return this._parsed.has(name)}set(...args){const[name,value,cookie]=1===args.length?[args[0].name,args[0].value,args[0]]:args,map=this._parsed;return map.set(name,function normalizeCookie(cookie={name:"",value:""}){"number"==typeof cookie.expires&&(cookie.expires=new Date(cookie.expires));cookie.maxAge&&(cookie.expires=new Date(Date.now()+1e3*cookie.maxAge));null!==cookie.path&&void 0!==cookie.path||(cookie.path="/");return cookie}({name,value,...cookie})),function replace(bag,headers){headers.delete("set-cookie");for(const[,value]of bag){const serialized=stringifyCookie(value);headers.append("set-cookie",serialized)}}(map,this._headers),this}delete(...args){const[name,options]="string"==typeof args[0]?[args[0]]:[args[0].name,args[0]];return this.set({...options,name,value:"",expires:new Date(0)})}[Symbol.for("edge-runtime.inspect.custom")](){return`ResponseCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`}toString(){return[...this._parsed.values()].map(stringifyCookie).join("; ")}}},"./node_modules/next/dist/server/app-render/after-task-async-storage-instance.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"afterTaskAsyncStorageInstance",{enumerable:!0,get:function(){return afterTaskAsyncStorageInstance}});const afterTaskAsyncStorageInstance=(0,__webpack_require__("./node_modules/next/dist/server/app-render/async-local-storage.js").createAsyncLocalStorage)()},"./node_modules/next/dist/server/app-render/after-task-async-storage.external.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"afterTaskAsyncStorage",{enumerable:!0,get:function(){return _aftertaskasyncstorageinstance.afterTaskAsyncStorageInstance}});const _aftertaskasyncstorageinstance=__webpack_require__("./node_modules/next/dist/server/app-render/after-task-async-storage-instance.js")},"./node_modules/next/dist/server/create-deduped-by-callsite-server-error-logger.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";var process=__webpack_require__("./node_modules/process/browser.js"),console=__webpack_require__("./node_modules/console-browserify/index.js");Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"createDedupedByCallsiteServerErrorLoggerDev",{enumerable:!0,get:function(){return createDedupedByCallsiteServerErrorLoggerDev}});const _react=_interop_require_wildcard(__webpack_require__("./node_modules/next/dist/compiled/react/index.js"));function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interop_require_wildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={__proto__:null},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}const errorRef={current:null},cache="function"==typeof _react.cache?_react.cache:fn=>fn,logErrorOrWarn=process.env.__NEXT_DYNAMIC_IO?console.error:console.warn;cache((key=>{try{logErrorOrWarn(errorRef.current)}finally{errorRef.current=null}}));function createDedupedByCallsiteServerErrorLoggerDev(getMessage){return function logDedupedError(...args){const message=getMessage(...args);logErrorOrWarn(message)}}},"./node_modules/next/dist/server/request/draft-mode.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"r",{enumerable:!0,get:function(){return draftMode}});const _workunitasyncstorageexternal=__webpack_require__("./node_modules/next/dist/server/app-render/work-unit-async-storage.external.js"),_workasyncstorageexternal=__webpack_require__("./node_modules/next/dist/server/app-render/work-async-storage.external.js"),_dynamicrendering=__webpack_require__("./node_modules/next/dist/server/app-render/dynamic-rendering.js"),_creatededupedbycallsiteservererrorlogger=__webpack_require__("./node_modules/next/dist/server/create-deduped-by-callsite-server-error-logger.js"),_staticgenerationbailout=__webpack_require__("./node_modules/next/dist/client/components/static-generation-bailout.js"),_hooksservercontext=__webpack_require__("./node_modules/next/dist/client/components/hooks-server-context.js");function draftMode(){_workasyncstorageexternal.workAsyncStorage.getStore();const workUnitStore=_workunitasyncstorageexternal.workUnitAsyncStorage.getStore();if(workUnitStore&&("cache"===workUnitStore.type||"unstable-cache"===workUnitStore.type||"prerender"===workUnitStore.type||"prerender-ppr"===workUnitStore.type||"prerender-legacy"===workUnitStore.type))return createExoticDraftMode(null);const requestStore=(0,_workunitasyncstorageexternal.getExpectedRequestStore)("draftMode"),cachedDraftMode=CachedDraftModes.get(requestStore.draftMode);if(cachedDraftMode)return cachedDraftMode;let promise;return promise=createExoticDraftMode(requestStore.draftMode),CachedDraftModes.set(requestStore.draftMode,promise),promise}const CachedDraftModes=new WeakMap;function createExoticDraftMode(underlyingProvider){const instance=new DraftMode(underlyingProvider),promise=Promise.resolve(instance);return Object.defineProperty(promise,"isEnabled",{get:()=>instance.isEnabled,set(newValue){Object.defineProperty(promise,"isEnabled",{value:newValue,writable:!0,enumerable:!0})},enumerable:!0,configurable:!0}),promise.enable=instance.enable.bind(instance),promise.disable=instance.disable.bind(instance),promise}class DraftMode{constructor(provider){this._provider=provider}get isEnabled(){return null!==this._provider&&this._provider.isEnabled}enable(){trackDynamicDraftMode("draftMode().enable()"),null!==this._provider&&this._provider.enable()}disable(){trackDynamicDraftMode("draftMode().disable()"),null!==this._provider&&this._provider.disable()}}(0,_creatededupedbycallsiteservererrorlogger.createDedupedByCallsiteServerErrorLoggerDev)((function createDraftModeAccessError(route,expression){const prefix=route?`Route "${route}" `:"This route ";return Object.defineProperty(new Error(`${prefix}used ${expression}. \`draftMode()\` should be awaited before using its value. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis`),"__NEXT_ERROR_CODE",{value:"E377",enumerable:!1,configurable:!0})}));function trackDynamicDraftMode(expression){const store=_workasyncstorageexternal.workAsyncStorage.getStore(),workUnitStore=_workunitasyncstorageexternal.workUnitAsyncStorage.getStore();if(store){if(workUnitStore){if("cache"===workUnitStore.type)throw Object.defineProperty(new Error(`Route ${store.route} used "${expression}" inside "use cache". The enabled status of draftMode can be read in caches but you must not enable or disable draftMode inside a cache. See more info here: https://nextjs.org/docs/messages/next-request-in-use-cache`),"__NEXT_ERROR_CODE",{value:"E246",enumerable:!1,configurable:!0});if("unstable-cache"===workUnitStore.type)throw Object.defineProperty(new Error(`Route ${store.route} used "${expression}" inside a function cached with "unstable_cache(...)". The enabled status of draftMode can be read in caches but you must not enable or disable draftMode inside a cache. See more info here: https://nextjs.org/docs/app/api-reference/functions/unstable_cache`),"__NEXT_ERROR_CODE",{value:"E259",enumerable:!1,configurable:!0});if("after"===workUnitStore.phase)throw Object.defineProperty(new Error(`Route ${store.route} used "${expression}" inside \`after\`. The enabled status of draftMode can be read inside \`after\` but you cannot enable or disable draftMode. See more info here: https://nextjs.org/docs/app/api-reference/functions/after`),"__NEXT_ERROR_CODE",{value:"E348",enumerable:!1,configurable:!0})}if(store.dynamicShouldError)throw Object.defineProperty(new _staticgenerationbailout.StaticGenBailoutError(`Route ${store.route} with \`dynamic = "error"\` couldn't be rendered statically because it used \`${expression}\`. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`),"__NEXT_ERROR_CODE",{value:"E553",enumerable:!1,configurable:!0});if(workUnitStore)if("prerender"===workUnitStore.type){const error=Object.defineProperty(new Error(`Route ${store.route} used ${expression} without first calling \`await connection()\`. See more info here: https://nextjs.org/docs/messages/next-prerender-sync-headers`),"__NEXT_ERROR_CODE",{value:"E126",enumerable:!1,configurable:!0});(0,_dynamicrendering.abortAndThrowOnSynchronousRequestDataAccess)(store.route,expression,error,workUnitStore)}else if("prerender-ppr"===workUnitStore.type)(0,_dynamicrendering.postponeWithTracking)(store.route,expression,workUnitStore.dynamicTracking);else{if("prerender-legacy"===workUnitStore.type){workUnitStore.revalidate=0;const err=Object.defineProperty(new _hooksservercontext.DynamicServerError(`Route ${store.route} couldn't be rendered statically because it used \`${expression}\`. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`),"__NEXT_ERROR_CODE",{value:"E558",enumerable:!1,configurable:!0});throw store.dynamicUsageDescription=expression,store.dynamicUsageStack=err.stack,err}}}}},"./node_modules/next/dist/server/request/headers.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";const _headers=__webpack_require__("./node_modules/next/dist/server/web/spec-extension/adapters/headers.js"),_workasyncstorageexternal=__webpack_require__("./node_modules/next/dist/server/app-render/work-async-storage.external.js"),_workunitasyncstorageexternal=__webpack_require__("./node_modules/next/dist/server/app-render/work-unit-async-storage.external.js"),_dynamicrendering=__webpack_require__("./node_modules/next/dist/server/app-render/dynamic-rendering.js"),_staticgenerationbailout=__webpack_require__("./node_modules/next/dist/client/components/static-generation-bailout.js"),_dynamicrenderingutils=__webpack_require__("./node_modules/next/dist/server/dynamic-rendering-utils.js"),_creatededupedbycallsiteservererrorlogger=__webpack_require__("./node_modules/next/dist/server/create-deduped-by-callsite-server-error-logger.js"),_utils=(__webpack_require__("./node_modules/next/dist/lib/scheduler.js"),__webpack_require__("./node_modules/next/dist/server/request/utils.js"));function headers(){const workStore=_workasyncstorageexternal.workAsyncStorage.getStore(),workUnitStore=_workunitasyncstorageexternal.workUnitAsyncStorage.getStore();if(workStore){if(workUnitStore&&"after"===workUnitStore.phase&&!(0,_utils.isRequestAPICallableInsideAfter)())throw Object.defineProperty(new Error(`Route ${workStore.route} used "headers" inside "after(...)". This is not supported. If you need this data inside an "after" callback, use "headers" outside of the callback. See more info here: https://nextjs.org/docs/canary/app/api-reference/functions/after`),"__NEXT_ERROR_CODE",{value:"E367",enumerable:!1,configurable:!0});if(workStore.forceStatic){return makeUntrackedExoticHeaders(_headers.HeadersAdapter.seal(new Headers({})))}if(workUnitStore){if("cache"===workUnitStore.type)throw Object.defineProperty(new Error(`Route ${workStore.route} used "headers" inside "use cache". Accessing Dynamic data sources inside a cache scope is not supported. If you need this data inside a cached function use "headers" outside of the cached function and pass the required dynamic data in as an argument. See more info here: https://nextjs.org/docs/messages/next-request-in-use-cache`),"__NEXT_ERROR_CODE",{value:"E304",enumerable:!1,configurable:!0});if("unstable-cache"===workUnitStore.type)throw Object.defineProperty(new Error(`Route ${workStore.route} used "headers" inside a function cached with "unstable_cache(...)". Accessing Dynamic data sources inside a cache scope is not supported. If you need this data inside a cached function use "headers" outside of the cached function and pass the required dynamic data in as an argument. See more info here: https://nextjs.org/docs/app/api-reference/functions/unstable_cache`),"__NEXT_ERROR_CODE",{value:"E127",enumerable:!1,configurable:!0})}if(workStore.dynamicShouldError)throw Object.defineProperty(new _staticgenerationbailout.StaticGenBailoutError(`Route ${workStore.route} with \`dynamic = "error"\` couldn't be rendered statically because it used \`headers\`. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`),"__NEXT_ERROR_CODE",{value:"E525",enumerable:!1,configurable:!0});if(workUnitStore){if("prerender"===workUnitStore.type)return function makeDynamicallyTrackedExoticHeaders(route,prerenderStore){const cachedHeaders=CachedHeaders.get(prerenderStore);if(cachedHeaders)return cachedHeaders;const promise=(0,_dynamicrenderingutils.makeHangingPromise)(prerenderStore.renderSignal,"`headers()`");return CachedHeaders.set(prerenderStore,promise),Object.defineProperties(promise,{append:{value:function append(){const expression=`\`headers().append(${describeNameArg(arguments[0])}, ...)\``,error=createHeadersAccessError(route,expression);(0,_dynamicrendering.abortAndThrowOnSynchronousRequestDataAccess)(route,expression,error,prerenderStore)}},delete:{value:function _delete(){const expression=`\`headers().delete(${describeNameArg(arguments[0])})\``,error=createHeadersAccessError(route,expression);(0,_dynamicrendering.abortAndThrowOnSynchronousRequestDataAccess)(route,expression,error,prerenderStore)}},get:{value:function get(){const expression=`\`headers().get(${describeNameArg(arguments[0])})\``,error=createHeadersAccessError(route,expression);(0,_dynamicrendering.abortAndThrowOnSynchronousRequestDataAccess)(route,expression,error,prerenderStore)}},has:{value:function has(){const expression=`\`headers().has(${describeNameArg(arguments[0])})\``,error=createHeadersAccessError(route,expression);(0,_dynamicrendering.abortAndThrowOnSynchronousRequestDataAccess)(route,expression,error,prerenderStore)}},set:{value:function set(){const expression=`\`headers().set(${describeNameArg(arguments[0])}, ...)\``,error=createHeadersAccessError(route,expression);(0,_dynamicrendering.abortAndThrowOnSynchronousRequestDataAccess)(route,expression,error,prerenderStore)}},getSetCookie:{value:function getSetCookie(){const expression="`headers().getSetCookie()`",error=createHeadersAccessError(route,expression);(0,_dynamicrendering.abortAndThrowOnSynchronousRequestDataAccess)(route,expression,error,prerenderStore)}},forEach:{value:function forEach(){const expression="`headers().forEach(...)`",error=createHeadersAccessError(route,expression);(0,_dynamicrendering.abortAndThrowOnSynchronousRequestDataAccess)(route,expression,error,prerenderStore)}},keys:{value:function keys(){const expression="`headers().keys()`",error=createHeadersAccessError(route,expression);(0,_dynamicrendering.abortAndThrowOnSynchronousRequestDataAccess)(route,expression,error,prerenderStore)}},values:{value:function values(){const expression="`headers().values()`",error=createHeadersAccessError(route,expression);(0,_dynamicrendering.abortAndThrowOnSynchronousRequestDataAccess)(route,expression,error,prerenderStore)}},entries:{value:function entries(){const expression="`headers().entries()`",error=createHeadersAccessError(route,expression);(0,_dynamicrendering.abortAndThrowOnSynchronousRequestDataAccess)(route,expression,error,prerenderStore)}},[Symbol.iterator]:{value:function(){const expression="`headers()[Symbol.iterator]()`",error=createHeadersAccessError(route,expression);(0,_dynamicrendering.abortAndThrowOnSynchronousRequestDataAccess)(route,expression,error,prerenderStore)}}}),promise}(workStore.route,workUnitStore);"prerender-ppr"===workUnitStore.type?(0,_dynamicrendering.postponeWithTracking)(workStore.route,"headers",workUnitStore.dynamicTracking):"prerender-legacy"===workUnitStore.type&&(0,_dynamicrendering.throwToInterruptStaticGeneration)("headers",workStore,workUnitStore)}(0,_dynamicrendering.trackDynamicDataInDynamicRender)(workStore,workUnitStore)}return makeUntrackedExoticHeaders((0,_workunitasyncstorageexternal.getExpectedRequestStore)("headers").headers)}const CachedHeaders=new WeakMap;function makeUntrackedExoticHeaders(underlyingHeaders){const cachedHeaders=CachedHeaders.get(underlyingHeaders);if(cachedHeaders)return cachedHeaders;const promise=Promise.resolve(underlyingHeaders);return CachedHeaders.set(underlyingHeaders,promise),Object.defineProperties(promise,{append:{value:underlyingHeaders.append.bind(underlyingHeaders)},delete:{value:underlyingHeaders.delete.bind(underlyingHeaders)},get:{value:underlyingHeaders.get.bind(underlyingHeaders)},has:{value:underlyingHeaders.has.bind(underlyingHeaders)},set:{value:underlyingHeaders.set.bind(underlyingHeaders)},getSetCookie:{value:underlyingHeaders.getSetCookie.bind(underlyingHeaders)},forEach:{value:underlyingHeaders.forEach.bind(underlyingHeaders)},keys:{value:underlyingHeaders.keys.bind(underlyingHeaders)},values:{value:underlyingHeaders.values.bind(underlyingHeaders)},entries:{value:underlyingHeaders.entries.bind(underlyingHeaders)},[Symbol.iterator]:{value:underlyingHeaders[Symbol.iterator].bind(underlyingHeaders)}}),promise}function describeNameArg(arg){return"string"==typeof arg?`'${arg}'`:"..."}(0,_creatededupedbycallsiteservererrorlogger.createDedupedByCallsiteServerErrorLoggerDev)(createHeadersAccessError);function createHeadersAccessError(route,expression){const prefix=route?`Route "${route}" `:"This route ";return Object.defineProperty(new Error(`${prefix}used ${expression}. \`headers()\` should be awaited before using its value. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis`),"__NEXT_ERROR_CODE",{value:"E277",enumerable:!1,configurable:!0})}},"./node_modules/next/dist/server/request/utils.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:!0,get:all[name]})}(exports,{isRequestAPICallableInsideAfter:function(){return isRequestAPICallableInsideAfter},throwForSearchParamsAccessInUseCache:function(){return throwForSearchParamsAccessInUseCache},throwWithStaticGenerationBailoutError:function(){return throwWithStaticGenerationBailoutError},throwWithStaticGenerationBailoutErrorWithDynamicError:function(){return throwWithStaticGenerationBailoutErrorWithDynamicError}});const _staticgenerationbailout=__webpack_require__("./node_modules/next/dist/client/components/static-generation-bailout.js"),_aftertaskasyncstorageexternal=__webpack_require__("./node_modules/next/dist/server/app-render/after-task-async-storage.external.js");function throwWithStaticGenerationBailoutError(route,expression){throw Object.defineProperty(new _staticgenerationbailout.StaticGenBailoutError(`Route ${route} couldn't be rendered statically because it used ${expression}. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`),"__NEXT_ERROR_CODE",{value:"E576",enumerable:!1,configurable:!0})}function throwWithStaticGenerationBailoutErrorWithDynamicError(route,expression){throw Object.defineProperty(new _staticgenerationbailout.StaticGenBailoutError(`Route ${route} with \`dynamic = "error"\` couldn't be rendered statically because it used ${expression}. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`),"__NEXT_ERROR_CODE",{value:"E543",enumerable:!1,configurable:!0})}function throwForSearchParamsAccessInUseCache(route){throw Object.defineProperty(new Error(`Route ${route} used "searchParams" inside "use cache". Accessing Dynamic data sources inside a cache scope is not supported. If you need this data inside a cached function use "searchParams" outside of the cached function and pass the required dynamic data in as an argument. See more info here: https://nextjs.org/docs/messages/next-request-in-use-cache`),"__NEXT_ERROR_CODE",{value:"E634",enumerable:!1,configurable:!0})}function isRequestAPICallableInsideAfter(){const afterTaskStore=_aftertaskasyncstorageexternal.afterTaskAsyncStorage.getStore();return"action"===(null==afterTaskStore?void 0:afterTaskStore.rootTaskSpawnPhase)}},"./node_modules/next/dist/server/web/spec-extension/adapters/headers.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:!0,get:all[name]})}(exports,{HeadersAdapter:function(){return HeadersAdapter},ReadonlyHeadersError:function(){return ReadonlyHeadersError}});const _reflect=__webpack_require__("./node_modules/next/dist/server/web/spec-extension/adapters/reflect.js");class ReadonlyHeadersError extends Error{constructor(){super("Headers cannot be modified. Read more: https://nextjs.org/docs/app/api-reference/functions/headers")}static callable(){throw new ReadonlyHeadersError}}class HeadersAdapter extends Headers{constructor(headers){super(),this.headers=new Proxy(headers,{get(target,prop,receiver){if("symbol"==typeof prop)return _reflect.ReflectAdapter.get(target,prop,receiver);const lowercased=prop.toLowerCase(),original=Object.keys(headers).find((o=>o.toLowerCase()===lowercased));return void 0!==original?_reflect.ReflectAdapter.get(target,original,receiver):void 0},set(target,prop,value,receiver){if("symbol"==typeof prop)return _reflect.ReflectAdapter.set(target,prop,value,receiver);const lowercased=prop.toLowerCase(),original=Object.keys(headers).find((o=>o.toLowerCase()===lowercased));return _reflect.ReflectAdapter.set(target,original??prop,value,receiver)},has(target,prop){if("symbol"==typeof prop)return _reflect.ReflectAdapter.has(target,prop);const lowercased=prop.toLowerCase(),original=Object.keys(headers).find((o=>o.toLowerCase()===lowercased));return void 0!==original&&_reflect.ReflectAdapter.has(target,original)},deleteProperty(target,prop){if("symbol"==typeof prop)return _reflect.ReflectAdapter.deleteProperty(target,prop);const lowercased=prop.toLowerCase(),original=Object.keys(headers).find((o=>o.toLowerCase()===lowercased));return void 0===original||_reflect.ReflectAdapter.deleteProperty(target,original)}})}static seal(headers){return new Proxy(headers,{get(target,prop,receiver){switch(prop){case"append":case"delete":case"set":return ReadonlyHeadersError.callable;default:return _reflect.ReflectAdapter.get(target,prop,receiver)}}})}merge(value){return Array.isArray(value)?value.join(", "):value}static from(headers){return headers instanceof Headers?headers:new HeadersAdapter(headers)}append(name,value){const existing=this.headers[name];"string"==typeof existing?this.headers[name]=[existing,value]:Array.isArray(existing)?existing.push(value):this.headers[name]=value}delete(name){delete this.headers[name]}get(name){const value=this.headers[name];return void 0!==value?this.merge(value):null}has(name){return void 0!==this.headers[name]}set(name,value){this.headers[name]=value}forEach(callbackfn,thisArg){for(const[name,value]of this.entries())callbackfn.call(thisArg,value,name,this)}*entries(){for(const key of Object.keys(this.headers)){const name=key.toLowerCase(),value=this.get(name);yield[name,value]}}*keys(){for(const key of Object.keys(this.headers)){const name=key.toLowerCase();yield name}}*values(){for(const key of Object.keys(this.headers)){const value=this.get(key);yield value}}[Symbol.iterator](){return this.entries()}}},"./node_modules/next/dist/server/web/spec-extension/adapters/reflect.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"ReflectAdapter",{enumerable:!0,get:function(){return ReflectAdapter}});class ReflectAdapter{static get(target,prop,receiver){const value=Reflect.get(target,prop,receiver);return"function"==typeof value?value.bind(target):value}static set(target,prop,value,receiver){return Reflect.set(target,prop,value,receiver)}static has(target,prop){return Reflect.has(target,prop)}static deleteProperty(target,prop){return Reflect.deleteProperty(target,prop)}}},"./node_modules/next/link.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/next/dist/client/link.js")},"./node_modules/zod/lib/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";var util,objectUtil;__webpack_require__.d(__webpack_exports__,{z:()=>z}),function(util){util.assertEqual=val=>val,util.assertIs=function assertIs(_arg){},util.assertNever=function assertNever(_x){throw new Error},util.arrayToEnum=items=>{const obj={};for(const item of items)obj[item]=item;return obj},util.getValidEnumValues=obj=>{const validKeys=util.objectKeys(obj).filter((k=>"number"!=typeof obj[obj[k]])),filtered={};for(const k of validKeys)filtered[k]=obj[k];return util.objectValues(filtered)},util.objectValues=obj=>util.objectKeys(obj).map((function(e){return obj[e]})),util.objectKeys="function"==typeof Object.keys?obj=>Object.keys(obj):object=>{const keys=[];for(const key in object)Object.prototype.hasOwnProperty.call(object,key)&&keys.push(key);return keys},util.find=(arr,checker)=>{for(const item of arr)if(checker(item))return item},util.isInteger="function"==typeof Number.isInteger?val=>Number.isInteger(val):val=>"number"==typeof val&&isFinite(val)&&Math.floor(val)===val,util.joinValues=function joinValues(array,separator=" | "){return array.map((val=>"string"==typeof val?`'${val}'`:val)).join(separator)},util.jsonStringifyReplacer=(_,value)=>"bigint"==typeof value?value.toString():value}(util||(util={})),function(objectUtil){objectUtil.mergeShapes=(first,second)=>({...first,...second})}(objectUtil||(objectUtil={}));const ZodParsedType=util.arrayToEnum(["string","nan","number","integer","float","boolean","date","bigint","symbol","function","undefined","null","array","object","unknown","promise","void","never","map","set"]),getParsedType=data=>{switch(typeof data){case"undefined":return ZodParsedType.undefined;case"string":return ZodParsedType.string;case"number":return isNaN(data)?ZodParsedType.nan:ZodParsedType.number;case"boolean":return ZodParsedType.boolean;case"function":return ZodParsedType.function;case"bigint":return ZodParsedType.bigint;case"symbol":return ZodParsedType.symbol;case"object":return Array.isArray(data)?ZodParsedType.array:null===data?ZodParsedType.null:data.then&&"function"==typeof data.then&&data.catch&&"function"==typeof data.catch?ZodParsedType.promise:"undefined"!=typeof Map&&data instanceof Map?ZodParsedType.map:"undefined"!=typeof Set&&data instanceof Set?ZodParsedType.set:"undefined"!=typeof Date&&data instanceof Date?ZodParsedType.date:ZodParsedType.object;default:return ZodParsedType.unknown}},ZodIssueCode=util.arrayToEnum(["invalid_type","invalid_literal","custom","invalid_union","invalid_union_discriminator","invalid_enum_value","unrecognized_keys","invalid_arguments","invalid_return_type","invalid_date","invalid_string","too_small","too_big","invalid_intersection_types","not_multiple_of","not_finite"]);class ZodError extends Error{get errors(){return this.issues}constructor(issues){super(),this.issues=[],this.addIssue=sub=>{this.issues=[...this.issues,sub]},this.addIssues=(subs=[])=>{this.issues=[...this.issues,...subs]};const actualProto=new.target.prototype;Object.setPrototypeOf?Object.setPrototypeOf(this,actualProto):this.__proto__=actualProto,this.name="ZodError",this.issues=issues}format(_mapper){const mapper=_mapper||function(issue){return issue.message},fieldErrors={_errors:[]},processError=error=>{for(const issue of error.issues)if("invalid_union"===issue.code)issue.unionErrors.map(processError);else if("invalid_return_type"===issue.code)processError(issue.returnTypeError);else if("invalid_arguments"===issue.code)processError(issue.argumentsError);else if(0===issue.path.length)fieldErrors._errors.push(mapper(issue));else{let curr=fieldErrors,i=0;for(;i<issue.path.length;){const el=issue.path[i];i===issue.path.length-1?(curr[el]=curr[el]||{_errors:[]},curr[el]._errors.push(mapper(issue))):curr[el]=curr[el]||{_errors:[]},curr=curr[el],i++}}};return processError(this),fieldErrors}static assert(value){if(!(value instanceof ZodError))throw new Error(`Not a ZodError: ${value}`)}toString(){return this.message}get message(){return JSON.stringify(this.issues,util.jsonStringifyReplacer,2)}get isEmpty(){return 0===this.issues.length}flatten(mapper=issue=>issue.message){const fieldErrors={},formErrors=[];for(const sub of this.issues)sub.path.length>0?(fieldErrors[sub.path[0]]=fieldErrors[sub.path[0]]||[],fieldErrors[sub.path[0]].push(mapper(sub))):formErrors.push(mapper(sub));return{formErrors,fieldErrors}}get formErrors(){return this.flatten()}}ZodError.create=issues=>new ZodError(issues);const errorMap=(issue,_ctx)=>{let message;switch(issue.code){case ZodIssueCode.invalid_type:message=issue.received===ZodParsedType.undefined?"Required":`Expected ${issue.expected}, received ${issue.received}`;break;case ZodIssueCode.invalid_literal:message=`Invalid literal value, expected ${JSON.stringify(issue.expected,util.jsonStringifyReplacer)}`;break;case ZodIssueCode.unrecognized_keys:message=`Unrecognized key(s) in object: ${util.joinValues(issue.keys,", ")}`;break;case ZodIssueCode.invalid_union:message="Invalid input";break;case ZodIssueCode.invalid_union_discriminator:message=`Invalid discriminator value. Expected ${util.joinValues(issue.options)}`;break;case ZodIssueCode.invalid_enum_value:message=`Invalid enum value. Expected ${util.joinValues(issue.options)}, received '${issue.received}'`;break;case ZodIssueCode.invalid_arguments:message="Invalid function arguments";break;case ZodIssueCode.invalid_return_type:message="Invalid function return type";break;case ZodIssueCode.invalid_date:message="Invalid date";break;case ZodIssueCode.invalid_string:"object"==typeof issue.validation?"includes"in issue.validation?(message=`Invalid input: must include "${issue.validation.includes}"`,"number"==typeof issue.validation.position&&(message=`${message} at one or more positions greater than or equal to ${issue.validation.position}`)):"startsWith"in issue.validation?message=`Invalid input: must start with "${issue.validation.startsWith}"`:"endsWith"in issue.validation?message=`Invalid input: must end with "${issue.validation.endsWith}"`:util.assertNever(issue.validation):message="regex"!==issue.validation?`Invalid ${issue.validation}`:"Invalid";break;case ZodIssueCode.too_small:message="array"===issue.type?`Array must contain ${issue.exact?"exactly":issue.inclusive?"at least":"more than"} ${issue.minimum} element(s)`:"string"===issue.type?`String must contain ${issue.exact?"exactly":issue.inclusive?"at least":"over"} ${issue.minimum} character(s)`:"number"===issue.type?`Number must be ${issue.exact?"exactly equal to ":issue.inclusive?"greater than or equal to ":"greater than "}${issue.minimum}`:"date"===issue.type?`Date must be ${issue.exact?"exactly equal to ":issue.inclusive?"greater than or equal to ":"greater than "}${new Date(Number(issue.minimum))}`:"Invalid input";break;case ZodIssueCode.too_big:message="array"===issue.type?`Array must contain ${issue.exact?"exactly":issue.inclusive?"at most":"less than"} ${issue.maximum} element(s)`:"string"===issue.type?`String must contain ${issue.exact?"exactly":issue.inclusive?"at most":"under"} ${issue.maximum} character(s)`:"number"===issue.type?`Number must be ${issue.exact?"exactly":issue.inclusive?"less than or equal to":"less than"} ${issue.maximum}`:"bigint"===issue.type?`BigInt must be ${issue.exact?"exactly":issue.inclusive?"less than or equal to":"less than"} ${issue.maximum}`:"date"===issue.type?`Date must be ${issue.exact?"exactly":issue.inclusive?"smaller than or equal to":"smaller than"} ${new Date(Number(issue.maximum))}`:"Invalid input";break;case ZodIssueCode.custom:message="Invalid input";break;case ZodIssueCode.invalid_intersection_types:message="Intersection results could not be merged";break;case ZodIssueCode.not_multiple_of:message=`Number must be a multiple of ${issue.multipleOf}`;break;case ZodIssueCode.not_finite:message="Number must be finite";break;default:message=_ctx.defaultError,util.assertNever(issue)}return{message}};let overrideErrorMap=errorMap;function getErrorMap(){return overrideErrorMap}const makeIssue=params=>{const{data,path,errorMaps,issueData}=params,fullPath=[...path,...issueData.path||[]],fullIssue={...issueData,path:fullPath};if(void 0!==issueData.message)return{...issueData,path:fullPath,message:issueData.message};let errorMessage="";const maps=errorMaps.filter((m=>!!m)).slice().reverse();for(const map of maps)errorMessage=map(fullIssue,{data,defaultError:errorMessage}).message;return{...issueData,path:fullPath,message:errorMessage}};function addIssueToContext(ctx,issueData){const overrideMap=getErrorMap(),issue=makeIssue({issueData,data:ctx.data,path:ctx.path,errorMaps:[ctx.common.contextualErrorMap,ctx.schemaErrorMap,overrideMap,overrideMap===errorMap?void 0:errorMap].filter((x=>!!x))});ctx.common.issues.push(issue)}class ParseStatus{constructor(){this.value="valid"}dirty(){"valid"===this.value&&(this.value="dirty")}abort(){"aborted"!==this.value&&(this.value="aborted")}static mergeArray(status,results){const arrayValue=[];for(const s of results){if("aborted"===s.status)return INVALID;"dirty"===s.status&&status.dirty(),arrayValue.push(s.value)}return{status:status.value,value:arrayValue}}static async mergeObjectAsync(status,pairs){const syncPairs=[];for(const pair of pairs){const key=await pair.key,value=await pair.value;syncPairs.push({key,value})}return ParseStatus.mergeObjectSync(status,syncPairs)}static mergeObjectSync(status,pairs){const finalObject={};for(const pair of pairs){const{key,value}=pair;if("aborted"===key.status)return INVALID;if("aborted"===value.status)return INVALID;"dirty"===key.status&&status.dirty(),"dirty"===value.status&&status.dirty(),"__proto__"===key.value||void 0===value.value&&!pair.alwaysSet||(finalObject[key.value]=value.value)}return{status:status.value,value:finalObject}}}const INVALID=Object.freeze({status:"aborted"}),DIRTY=value=>({status:"dirty",value}),OK=value=>({status:"valid",value}),isAborted=x=>"aborted"===x.status,isDirty=x=>"dirty"===x.status,isValid=x=>"valid"===x.status,isAsync=x=>"undefined"!=typeof Promise&&x instanceof Promise;function __classPrivateFieldGet(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)}function __classPrivateFieldSet(receiver,state,value,kind,f){if("m"===kind)throw new TypeError("Private method is not writable");if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===kind?f.call(receiver,value):f?f.value=value:state.set(receiver,value),value}var errorUtil,_ZodEnum_cache,_ZodNativeEnum_cache;"function"==typeof SuppressedError&&SuppressedError,function(errorUtil){errorUtil.errToObj=message=>"string"==typeof message?{message}:message||{},errorUtil.toString=message=>"string"==typeof message?message:null==message?void 0:message.message}(errorUtil||(errorUtil={}));class ParseInputLazyPath{constructor(parent,value,path,key){this._cachedPath=[],this.parent=parent,this.data=value,this._path=path,this._key=key}get path(){return this._cachedPath.length||(this._key instanceof Array?this._cachedPath.push(...this._path,...this._key):this._cachedPath.push(...this._path,this._key)),this._cachedPath}}const handleResult=(ctx,result)=>{if(isValid(result))return{success:!0,data:result.value};if(!ctx.common.issues.length)throw new Error("Validation failed but no issues detected.");return{success:!1,get error(){if(this._error)return this._error;const error=new ZodError(ctx.common.issues);return this._error=error,this._error}}};function processCreateParams(params){if(!params)return{};const{errorMap,invalid_type_error,required_error,description}=params;if(errorMap&&(invalid_type_error||required_error))throw new Error('Can\'t use "invalid_type_error" or "required_error" in conjunction with custom error map.');if(errorMap)return{errorMap,description};return{errorMap:(iss,ctx)=>{var _a,_b;const{message}=params;return"invalid_enum_value"===iss.code?{message:null!=message?message:ctx.defaultError}:void 0===ctx.data?{message:null!==(_a=null!=message?message:required_error)&&void 0!==_a?_a:ctx.defaultError}:"invalid_type"!==iss.code?{message:ctx.defaultError}:{message:null!==(_b=null!=message?message:invalid_type_error)&&void 0!==_b?_b:ctx.defaultError}},description}}class ZodType{get description(){return this._def.description}_getType(input){return getParsedType(input.data)}_getOrReturnCtx(input,ctx){return ctx||{common:input.parent.common,data:input.data,parsedType:getParsedType(input.data),schemaErrorMap:this._def.errorMap,path:input.path,parent:input.parent}}_processInputParams(input){return{status:new ParseStatus,ctx:{common:input.parent.common,data:input.data,parsedType:getParsedType(input.data),schemaErrorMap:this._def.errorMap,path:input.path,parent:input.parent}}}_parseSync(input){const result=this._parse(input);if(isAsync(result))throw new Error("Synchronous parse encountered promise.");return result}_parseAsync(input){const result=this._parse(input);return Promise.resolve(result)}parse(data,params){const result=this.safeParse(data,params);if(result.success)return result.data;throw result.error}safeParse(data,params){var _a;const ctx={common:{issues:[],async:null!==(_a=null==params?void 0:params.async)&&void 0!==_a&&_a,contextualErrorMap:null==params?void 0:params.errorMap},path:(null==params?void 0:params.path)||[],schemaErrorMap:this._def.errorMap,parent:null,data,parsedType:getParsedType(data)},result=this._parseSync({data,path:ctx.path,parent:ctx});return handleResult(ctx,result)}"~validate"(data){var _a,_b;const ctx={common:{issues:[],async:!!this["~standard"].async},path:[],schemaErrorMap:this._def.errorMap,parent:null,data,parsedType:getParsedType(data)};if(!this["~standard"].async)try{const result=this._parseSync({data,path:[],parent:ctx});return isValid(result)?{value:result.value}:{issues:ctx.common.issues}}catch(err){(null===(_b=null===(_a=null==err?void 0:err.message)||void 0===_a?void 0:_a.toLowerCase())||void 0===_b?void 0:_b.includes("encountered"))&&(this["~standard"].async=!0),ctx.common={issues:[],async:!0}}return this._parseAsync({data,path:[],parent:ctx}).then((result=>isValid(result)?{value:result.value}:{issues:ctx.common.issues}))}async parseAsync(data,params){const result=await this.safeParseAsync(data,params);if(result.success)return result.data;throw result.error}async safeParseAsync(data,params){const ctx={common:{issues:[],contextualErrorMap:null==params?void 0:params.errorMap,async:!0},path:(null==params?void 0:params.path)||[],schemaErrorMap:this._def.errorMap,parent:null,data,parsedType:getParsedType(data)},maybeAsyncResult=this._parse({data,path:ctx.path,parent:ctx}),result=await(isAsync(maybeAsyncResult)?maybeAsyncResult:Promise.resolve(maybeAsyncResult));return handleResult(ctx,result)}refine(check,message){const getIssueProperties=val=>"string"==typeof message||void 0===message?{message}:"function"==typeof message?message(val):message;return this._refinement(((val,ctx)=>{const result=check(val),setError=()=>ctx.addIssue({code:ZodIssueCode.custom,...getIssueProperties(val)});return"undefined"!=typeof Promise&&result instanceof Promise?result.then((data=>!!data||(setError(),!1))):!!result||(setError(),!1)}))}refinement(check,refinementData){return this._refinement(((val,ctx)=>!!check(val)||(ctx.addIssue("function"==typeof refinementData?refinementData(val,ctx):refinementData),!1)))}_refinement(refinement){return new ZodEffects({schema:this,typeName:ZodFirstPartyTypeKind.ZodEffects,effect:{type:"refinement",refinement}})}superRefine(refinement){return this._refinement(refinement)}constructor(def){this.spa=this.safeParseAsync,this._def=def,this.parse=this.parse.bind(this),this.safeParse=this.safeParse.bind(this),this.parseAsync=this.parseAsync.bind(this),this.safeParseAsync=this.safeParseAsync.bind(this),this.spa=this.spa.bind(this),this.refine=this.refine.bind(this),this.refinement=this.refinement.bind(this),this.superRefine=this.superRefine.bind(this),this.optional=this.optional.bind(this),this.nullable=this.nullable.bind(this),this.nullish=this.nullish.bind(this),this.array=this.array.bind(this),this.promise=this.promise.bind(this),this.or=this.or.bind(this),this.and=this.and.bind(this),this.transform=this.transform.bind(this),this.brand=this.brand.bind(this),this.default=this.default.bind(this),this.catch=this.catch.bind(this),this.describe=this.describe.bind(this),this.pipe=this.pipe.bind(this),this.readonly=this.readonly.bind(this),this.isNullable=this.isNullable.bind(this),this.isOptional=this.isOptional.bind(this),this["~standard"]={version:1,vendor:"zod",validate:data=>this["~validate"](data)}}optional(){return ZodOptional.create(this,this._def)}nullable(){return ZodNullable.create(this,this._def)}nullish(){return this.nullable().optional()}array(){return ZodArray.create(this)}promise(){return ZodPromise.create(this,this._def)}or(option){return ZodUnion.create([this,option],this._def)}and(incoming){return ZodIntersection.create(this,incoming,this._def)}transform(transform){return new ZodEffects({...processCreateParams(this._def),schema:this,typeName:ZodFirstPartyTypeKind.ZodEffects,effect:{type:"transform",transform}})}default(def){const defaultValueFunc="function"==typeof def?def:()=>def;return new ZodDefault({...processCreateParams(this._def),innerType:this,defaultValue:defaultValueFunc,typeName:ZodFirstPartyTypeKind.ZodDefault})}brand(){return new ZodBranded({typeName:ZodFirstPartyTypeKind.ZodBranded,type:this,...processCreateParams(this._def)})}catch(def){const catchValueFunc="function"==typeof def?def:()=>def;return new ZodCatch({...processCreateParams(this._def),innerType:this,catchValue:catchValueFunc,typeName:ZodFirstPartyTypeKind.ZodCatch})}describe(description){return new(0,this.constructor)({...this._def,description})}pipe(target){return ZodPipeline.create(this,target)}readonly(){return ZodReadonly.create(this)}isOptional(){return this.safeParse(void 0).success}isNullable(){return this.safeParse(null).success}}const cuidRegex=/^c[^\s-]{8,}$/i,cuid2Regex=/^[0-9a-z]+$/,ulidRegex=/^[0-9A-HJKMNP-TV-Z]{26}$/i,uuidRegex=/^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$/i,nanoidRegex=/^[a-z0-9_-]{21}$/i,jwtRegex=/^[A-Za-z0-9-_]+\.[A-Za-z0-9-_]+\.[A-Za-z0-9-_]*$/,durationRegex=/^[-+]?P(?!$)(?:(?:[-+]?\d+Y)|(?:[-+]?\d+[.,]\d+Y$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:(?:[-+]?\d+W)|(?:[-+]?\d+[.,]\d+W$))?(?:(?:[-+]?\d+D)|(?:[-+]?\d+[.,]\d+D$))?(?:T(?=[\d+-])(?:(?:[-+]?\d+H)|(?:[-+]?\d+[.,]\d+H$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:[-+]?\d+(?:[.,]\d+)?S)?)??$/,emailRegex=/^(?!\.)(?!.*\.\.)([A-Z0-9_'+\-\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\-]*\.)+[A-Z]{2,}$/i;let emojiRegex;const ipv4Regex=/^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/,ipv4CidrRegex=/^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\/(3[0-2]|[12]?[0-9])$/,ipv6Regex=/^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/,ipv6CidrRegex=/^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/,base64Regex=/^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/,base64urlRegex=/^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/,dateRegexSource="((\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\d|30)|(02)-(0[1-9]|1\\d|2[0-8])))",dateRegex=new RegExp(`^${dateRegexSource}$`);function timeRegexSource(args){let regex="([01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d";return args.precision?regex=`${regex}\\.\\d{${args.precision}}`:null==args.precision&&(regex=`${regex}(\\.\\d+)?`),regex}function datetimeRegex(args){let regex=`${dateRegexSource}T${timeRegexSource(args)}`;const opts=[];return opts.push(args.local?"Z?":"Z"),args.offset&&opts.push("([+-]\\d{2}:?\\d{2})"),regex=`${regex}(${opts.join("|")})`,new RegExp(`^${regex}$`)}function isValidJWT(jwt,alg){if(!jwtRegex.test(jwt))return!1;try{const[header]=jwt.split("."),base64=header.replace(/-/g,"+").replace(/_/g,"/").padEnd(header.length+(4-header.length%4)%4,"="),decoded=JSON.parse(atob(base64));return"object"==typeof decoded&&null!==decoded&&(!(!decoded.typ||!decoded.alg)&&(!alg||decoded.alg===alg))}catch(_a){return!1}}function isValidCidr(ip,version){return!("v4"!==version&&version||!ipv4CidrRegex.test(ip))||!("v6"!==version&&version||!ipv6CidrRegex.test(ip))}class ZodString extends ZodType{_parse(input){this._def.coerce&&(input.data=String(input.data));if(this._getType(input)!==ZodParsedType.string){const ctx=this._getOrReturnCtx(input);return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.string,received:ctx.parsedType}),INVALID}const status=new ParseStatus;let ctx;for(const check of this._def.checks)if("min"===check.kind)input.data.length<check.value&&(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.too_small,minimum:check.value,type:"string",inclusive:!0,exact:!1,message:check.message}),status.dirty());else if("max"===check.kind)input.data.length>check.value&&(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.too_big,maximum:check.value,type:"string",inclusive:!0,exact:!1,message:check.message}),status.dirty());else if("length"===check.kind){const tooBig=input.data.length>check.value,tooSmall=input.data.length<check.value;(tooBig||tooSmall)&&(ctx=this._getOrReturnCtx(input,ctx),tooBig?addIssueToContext(ctx,{code:ZodIssueCode.too_big,maximum:check.value,type:"string",inclusive:!0,exact:!0,message:check.message}):tooSmall&&addIssueToContext(ctx,{code:ZodIssueCode.too_small,minimum:check.value,type:"string",inclusive:!0,exact:!0,message:check.message}),status.dirty())}else if("email"===check.kind)emailRegex.test(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"email",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty());else if("emoji"===check.kind)emojiRegex||(emojiRegex=new RegExp("^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$","u")),emojiRegex.test(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"emoji",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty());else if("uuid"===check.kind)uuidRegex.test(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"uuid",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty());else if("nanoid"===check.kind)nanoidRegex.test(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"nanoid",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty());else if("cuid"===check.kind)cuidRegex.test(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"cuid",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty());else if("cuid2"===check.kind)cuid2Regex.test(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"cuid2",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty());else if("ulid"===check.kind)ulidRegex.test(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"ulid",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty());else if("url"===check.kind)try{new URL(input.data)}catch(_a){ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"url",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty()}else if("regex"===check.kind){check.regex.lastIndex=0;check.regex.test(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"regex",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty())}else if("trim"===check.kind)input.data=input.data.trim();else if("includes"===check.kind)input.data.includes(check.value,check.position)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.invalid_string,validation:{includes:check.value,position:check.position},message:check.message}),status.dirty());else if("toLowerCase"===check.kind)input.data=input.data.toLowerCase();else if("toUpperCase"===check.kind)input.data=input.data.toUpperCase();else if("startsWith"===check.kind)input.data.startsWith(check.value)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.invalid_string,validation:{startsWith:check.value},message:check.message}),status.dirty());else if("endsWith"===check.kind)input.data.endsWith(check.value)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.invalid_string,validation:{endsWith:check.value},message:check.message}),status.dirty());else if("datetime"===check.kind){datetimeRegex(check).test(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.invalid_string,validation:"datetime",message:check.message}),status.dirty())}else if("date"===check.kind){dateRegex.test(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.invalid_string,validation:"date",message:check.message}),status.dirty())}else if("time"===check.kind){new RegExp(`^${timeRegexSource(check)}$`).test(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.invalid_string,validation:"time",message:check.message}),status.dirty())}else"duration"===check.kind?durationRegex.test(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"duration",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty()):"ip"===check.kind?(ip=input.data,("v4"!==(version=check.version)&&version||!ipv4Regex.test(ip))&&("v6"!==version&&version||!ipv6Regex.test(ip))&&(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"ip",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty())):"jwt"===check.kind?isValidJWT(input.data,check.alg)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"jwt",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty()):"cidr"===check.kind?isValidCidr(input.data,check.version)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"cidr",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty()):"base64"===check.kind?base64Regex.test(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"base64",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty()):"base64url"===check.kind?base64urlRegex.test(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"base64url",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty()):util.assertNever(check);var ip,version;return{status:status.value,value:input.data}}_regex(regex,validation,message){return this.refinement((data=>regex.test(data)),{validation,code:ZodIssueCode.invalid_string,...errorUtil.errToObj(message)})}_addCheck(check){return new ZodString({...this._def,checks:[...this._def.checks,check]})}email(message){return this._addCheck({kind:"email",...errorUtil.errToObj(message)})}url(message){return this._addCheck({kind:"url",...errorUtil.errToObj(message)})}emoji(message){return this._addCheck({kind:"emoji",...errorUtil.errToObj(message)})}uuid(message){return this._addCheck({kind:"uuid",...errorUtil.errToObj(message)})}nanoid(message){return this._addCheck({kind:"nanoid",...errorUtil.errToObj(message)})}cuid(message){return this._addCheck({kind:"cuid",...errorUtil.errToObj(message)})}cuid2(message){return this._addCheck({kind:"cuid2",...errorUtil.errToObj(message)})}ulid(message){return this._addCheck({kind:"ulid",...errorUtil.errToObj(message)})}base64(message){return this._addCheck({kind:"base64",...errorUtil.errToObj(message)})}base64url(message){return this._addCheck({kind:"base64url",...errorUtil.errToObj(message)})}jwt(options){return this._addCheck({kind:"jwt",...errorUtil.errToObj(options)})}ip(options){return this._addCheck({kind:"ip",...errorUtil.errToObj(options)})}cidr(options){return this._addCheck({kind:"cidr",...errorUtil.errToObj(options)})}datetime(options){var _a,_b;return"string"==typeof options?this._addCheck({kind:"datetime",precision:null,offset:!1,local:!1,message:options}):this._addCheck({kind:"datetime",precision:void 0===(null==options?void 0:options.precision)?null:null==options?void 0:options.precision,offset:null!==(_a=null==options?void 0:options.offset)&&void 0!==_a&&_a,local:null!==(_b=null==options?void 0:options.local)&&void 0!==_b&&_b,...errorUtil.errToObj(null==options?void 0:options.message)})}date(message){return this._addCheck({kind:"date",message})}time(options){return"string"==typeof options?this._addCheck({kind:"time",precision:null,message:options}):this._addCheck({kind:"time",precision:void 0===(null==options?void 0:options.precision)?null:null==options?void 0:options.precision,...errorUtil.errToObj(null==options?void 0:options.message)})}duration(message){return this._addCheck({kind:"duration",...errorUtil.errToObj(message)})}regex(regex,message){return this._addCheck({kind:"regex",regex,...errorUtil.errToObj(message)})}includes(value,options){return this._addCheck({kind:"includes",value,position:null==options?void 0:options.position,...errorUtil.errToObj(null==options?void 0:options.message)})}startsWith(value,message){return this._addCheck({kind:"startsWith",value,...errorUtil.errToObj(message)})}endsWith(value,message){return this._addCheck({kind:"endsWith",value,...errorUtil.errToObj(message)})}min(minLength,message){return this._addCheck({kind:"min",value:minLength,...errorUtil.errToObj(message)})}max(maxLength,message){return this._addCheck({kind:"max",value:maxLength,...errorUtil.errToObj(message)})}length(len,message){return this._addCheck({kind:"length",value:len,...errorUtil.errToObj(message)})}nonempty(message){return this.min(1,errorUtil.errToObj(message))}trim(){return new ZodString({...this._def,checks:[...this._def.checks,{kind:"trim"}]})}toLowerCase(){return new ZodString({...this._def,checks:[...this._def.checks,{kind:"toLowerCase"}]})}toUpperCase(){return new ZodString({...this._def,checks:[...this._def.checks,{kind:"toUpperCase"}]})}get isDatetime(){return!!this._def.checks.find((ch=>"datetime"===ch.kind))}get isDate(){return!!this._def.checks.find((ch=>"date"===ch.kind))}get isTime(){return!!this._def.checks.find((ch=>"time"===ch.kind))}get isDuration(){return!!this._def.checks.find((ch=>"duration"===ch.kind))}get isEmail(){return!!this._def.checks.find((ch=>"email"===ch.kind))}get isURL(){return!!this._def.checks.find((ch=>"url"===ch.kind))}get isEmoji(){return!!this._def.checks.find((ch=>"emoji"===ch.kind))}get isUUID(){return!!this._def.checks.find((ch=>"uuid"===ch.kind))}get isNANOID(){return!!this._def.checks.find((ch=>"nanoid"===ch.kind))}get isCUID(){return!!this._def.checks.find((ch=>"cuid"===ch.kind))}get isCUID2(){return!!this._def.checks.find((ch=>"cuid2"===ch.kind))}get isULID(){return!!this._def.checks.find((ch=>"ulid"===ch.kind))}get isIP(){return!!this._def.checks.find((ch=>"ip"===ch.kind))}get isCIDR(){return!!this._def.checks.find((ch=>"cidr"===ch.kind))}get isBase64(){return!!this._def.checks.find((ch=>"base64"===ch.kind))}get isBase64url(){return!!this._def.checks.find((ch=>"base64url"===ch.kind))}get minLength(){let min=null;for(const ch of this._def.checks)"min"===ch.kind&&(null===min||ch.value>min)&&(min=ch.value);return min}get maxLength(){let max=null;for(const ch of this._def.checks)"max"===ch.kind&&(null===max||ch.value<max)&&(max=ch.value);return max}}function floatSafeRemainder(val,step){const valDecCount=(val.toString().split(".")[1]||"").length,stepDecCount=(step.toString().split(".")[1]||"").length,decCount=valDecCount>stepDecCount?valDecCount:stepDecCount;return parseInt(val.toFixed(decCount).replace(".",""))%parseInt(step.toFixed(decCount).replace(".",""))/Math.pow(10,decCount)}ZodString.create=params=>{var _a;return new ZodString({checks:[],typeName:ZodFirstPartyTypeKind.ZodString,coerce:null!==(_a=null==params?void 0:params.coerce)&&void 0!==_a&&_a,...processCreateParams(params)})};class ZodNumber extends ZodType{constructor(){super(...arguments),this.min=this.gte,this.max=this.lte,this.step=this.multipleOf}_parse(input){this._def.coerce&&(input.data=Number(input.data));if(this._getType(input)!==ZodParsedType.number){const ctx=this._getOrReturnCtx(input);return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.number,received:ctx.parsedType}),INVALID}let ctx;const status=new ParseStatus;for(const check of this._def.checks)if("int"===check.kind)util.isInteger(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:"integer",received:"float",message:check.message}),status.dirty());else if("min"===check.kind){(check.inclusive?input.data<check.value:input.data<=check.value)&&(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.too_small,minimum:check.value,type:"number",inclusive:check.inclusive,exact:!1,message:check.message}),status.dirty())}else if("max"===check.kind){(check.inclusive?input.data>check.value:input.data>=check.value)&&(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.too_big,maximum:check.value,type:"number",inclusive:check.inclusive,exact:!1,message:check.message}),status.dirty())}else"multipleOf"===check.kind?0!==floatSafeRemainder(input.data,check.value)&&(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.not_multiple_of,multipleOf:check.value,message:check.message}),status.dirty()):"finite"===check.kind?Number.isFinite(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.not_finite,message:check.message}),status.dirty()):util.assertNever(check);return{status:status.value,value:input.data}}gte(value,message){return this.setLimit("min",value,!0,errorUtil.toString(message))}gt(value,message){return this.setLimit("min",value,!1,errorUtil.toString(message))}lte(value,message){return this.setLimit("max",value,!0,errorUtil.toString(message))}lt(value,message){return this.setLimit("max",value,!1,errorUtil.toString(message))}setLimit(kind,value,inclusive,message){return new ZodNumber({...this._def,checks:[...this._def.checks,{kind,value,inclusive,message:errorUtil.toString(message)}]})}_addCheck(check){return new ZodNumber({...this._def,checks:[...this._def.checks,check]})}int(message){return this._addCheck({kind:"int",message:errorUtil.toString(message)})}positive(message){return this._addCheck({kind:"min",value:0,inclusive:!1,message:errorUtil.toString(message)})}negative(message){return this._addCheck({kind:"max",value:0,inclusive:!1,message:errorUtil.toString(message)})}nonpositive(message){return this._addCheck({kind:"max",value:0,inclusive:!0,message:errorUtil.toString(message)})}nonnegative(message){return this._addCheck({kind:"min",value:0,inclusive:!0,message:errorUtil.toString(message)})}multipleOf(value,message){return this._addCheck({kind:"multipleOf",value,message:errorUtil.toString(message)})}finite(message){return this._addCheck({kind:"finite",message:errorUtil.toString(message)})}safe(message){return this._addCheck({kind:"min",inclusive:!0,value:Number.MIN_SAFE_INTEGER,message:errorUtil.toString(message)})._addCheck({kind:"max",inclusive:!0,value:Number.MAX_SAFE_INTEGER,message:errorUtil.toString(message)})}get minValue(){let min=null;for(const ch of this._def.checks)"min"===ch.kind&&(null===min||ch.value>min)&&(min=ch.value);return min}get maxValue(){let max=null;for(const ch of this._def.checks)"max"===ch.kind&&(null===max||ch.value<max)&&(max=ch.value);return max}get isInt(){return!!this._def.checks.find((ch=>"int"===ch.kind||"multipleOf"===ch.kind&&util.isInteger(ch.value)))}get isFinite(){let max=null,min=null;for(const ch of this._def.checks){if("finite"===ch.kind||"int"===ch.kind||"multipleOf"===ch.kind)return!0;"min"===ch.kind?(null===min||ch.value>min)&&(min=ch.value):"max"===ch.kind&&(null===max||ch.value<max)&&(max=ch.value)}return Number.isFinite(min)&&Number.isFinite(max)}}ZodNumber.create=params=>new ZodNumber({checks:[],typeName:ZodFirstPartyTypeKind.ZodNumber,coerce:(null==params?void 0:params.coerce)||!1,...processCreateParams(params)});class ZodBigInt extends ZodType{constructor(){super(...arguments),this.min=this.gte,this.max=this.lte}_parse(input){if(this._def.coerce)try{input.data=BigInt(input.data)}catch(_a){return this._getInvalidInput(input)}if(this._getType(input)!==ZodParsedType.bigint)return this._getInvalidInput(input);let ctx;const status=new ParseStatus;for(const check of this._def.checks)if("min"===check.kind){(check.inclusive?input.data<check.value:input.data<=check.value)&&(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.too_small,type:"bigint",minimum:check.value,inclusive:check.inclusive,message:check.message}),status.dirty())}else if("max"===check.kind){(check.inclusive?input.data>check.value:input.data>=check.value)&&(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.too_big,type:"bigint",maximum:check.value,inclusive:check.inclusive,message:check.message}),status.dirty())}else"multipleOf"===check.kind?input.data%check.value!==BigInt(0)&&(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.not_multiple_of,multipleOf:check.value,message:check.message}),status.dirty()):util.assertNever(check);return{status:status.value,value:input.data}}_getInvalidInput(input){const ctx=this._getOrReturnCtx(input);return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.bigint,received:ctx.parsedType}),INVALID}gte(value,message){return this.setLimit("min",value,!0,errorUtil.toString(message))}gt(value,message){return this.setLimit("min",value,!1,errorUtil.toString(message))}lte(value,message){return this.setLimit("max",value,!0,errorUtil.toString(message))}lt(value,message){return this.setLimit("max",value,!1,errorUtil.toString(message))}setLimit(kind,value,inclusive,message){return new ZodBigInt({...this._def,checks:[...this._def.checks,{kind,value,inclusive,message:errorUtil.toString(message)}]})}_addCheck(check){return new ZodBigInt({...this._def,checks:[...this._def.checks,check]})}positive(message){return this._addCheck({kind:"min",value:BigInt(0),inclusive:!1,message:errorUtil.toString(message)})}negative(message){return this._addCheck({kind:"max",value:BigInt(0),inclusive:!1,message:errorUtil.toString(message)})}nonpositive(message){return this._addCheck({kind:"max",value:BigInt(0),inclusive:!0,message:errorUtil.toString(message)})}nonnegative(message){return this._addCheck({kind:"min",value:BigInt(0),inclusive:!0,message:errorUtil.toString(message)})}multipleOf(value,message){return this._addCheck({kind:"multipleOf",value,message:errorUtil.toString(message)})}get minValue(){let min=null;for(const ch of this._def.checks)"min"===ch.kind&&(null===min||ch.value>min)&&(min=ch.value);return min}get maxValue(){let max=null;for(const ch of this._def.checks)"max"===ch.kind&&(null===max||ch.value<max)&&(max=ch.value);return max}}ZodBigInt.create=params=>{var _a;return new ZodBigInt({checks:[],typeName:ZodFirstPartyTypeKind.ZodBigInt,coerce:null!==(_a=null==params?void 0:params.coerce)&&void 0!==_a&&_a,...processCreateParams(params)})};class ZodBoolean extends ZodType{_parse(input){this._def.coerce&&(input.data=Boolean(input.data));if(this._getType(input)!==ZodParsedType.boolean){const ctx=this._getOrReturnCtx(input);return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.boolean,received:ctx.parsedType}),INVALID}return OK(input.data)}}ZodBoolean.create=params=>new ZodBoolean({typeName:ZodFirstPartyTypeKind.ZodBoolean,coerce:(null==params?void 0:params.coerce)||!1,...processCreateParams(params)});class ZodDate extends ZodType{_parse(input){this._def.coerce&&(input.data=new Date(input.data));if(this._getType(input)!==ZodParsedType.date){const ctx=this._getOrReturnCtx(input);return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.date,received:ctx.parsedType}),INVALID}if(isNaN(input.data.getTime())){return addIssueToContext(this._getOrReturnCtx(input),{code:ZodIssueCode.invalid_date}),INVALID}const status=new ParseStatus;let ctx;for(const check of this._def.checks)"min"===check.kind?input.data.getTime()<check.value&&(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.too_small,message:check.message,inclusive:!0,exact:!1,minimum:check.value,type:"date"}),status.dirty()):"max"===check.kind?input.data.getTime()>check.value&&(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.too_big,message:check.message,inclusive:!0,exact:!1,maximum:check.value,type:"date"}),status.dirty()):util.assertNever(check);return{status:status.value,value:new Date(input.data.getTime())}}_addCheck(check){return new ZodDate({...this._def,checks:[...this._def.checks,check]})}min(minDate,message){return this._addCheck({kind:"min",value:minDate.getTime(),message:errorUtil.toString(message)})}max(maxDate,message){return this._addCheck({kind:"max",value:maxDate.getTime(),message:errorUtil.toString(message)})}get minDate(){let min=null;for(const ch of this._def.checks)"min"===ch.kind&&(null===min||ch.value>min)&&(min=ch.value);return null!=min?new Date(min):null}get maxDate(){let max=null;for(const ch of this._def.checks)"max"===ch.kind&&(null===max||ch.value<max)&&(max=ch.value);return null!=max?new Date(max):null}}ZodDate.create=params=>new ZodDate({checks:[],coerce:(null==params?void 0:params.coerce)||!1,typeName:ZodFirstPartyTypeKind.ZodDate,...processCreateParams(params)});class ZodSymbol extends ZodType{_parse(input){if(this._getType(input)!==ZodParsedType.symbol){const ctx=this._getOrReturnCtx(input);return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.symbol,received:ctx.parsedType}),INVALID}return OK(input.data)}}ZodSymbol.create=params=>new ZodSymbol({typeName:ZodFirstPartyTypeKind.ZodSymbol,...processCreateParams(params)});class ZodUndefined extends ZodType{_parse(input){if(this._getType(input)!==ZodParsedType.undefined){const ctx=this._getOrReturnCtx(input);return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.undefined,received:ctx.parsedType}),INVALID}return OK(input.data)}}ZodUndefined.create=params=>new ZodUndefined({typeName:ZodFirstPartyTypeKind.ZodUndefined,...processCreateParams(params)});class ZodNull extends ZodType{_parse(input){if(this._getType(input)!==ZodParsedType.null){const ctx=this._getOrReturnCtx(input);return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.null,received:ctx.parsedType}),INVALID}return OK(input.data)}}ZodNull.create=params=>new ZodNull({typeName:ZodFirstPartyTypeKind.ZodNull,...processCreateParams(params)});class ZodAny extends ZodType{constructor(){super(...arguments),this._any=!0}_parse(input){return OK(input.data)}}ZodAny.create=params=>new ZodAny({typeName:ZodFirstPartyTypeKind.ZodAny,...processCreateParams(params)});class ZodUnknown extends ZodType{constructor(){super(...arguments),this._unknown=!0}_parse(input){return OK(input.data)}}ZodUnknown.create=params=>new ZodUnknown({typeName:ZodFirstPartyTypeKind.ZodUnknown,...processCreateParams(params)});class ZodNever extends ZodType{_parse(input){const ctx=this._getOrReturnCtx(input);return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.never,received:ctx.parsedType}),INVALID}}ZodNever.create=params=>new ZodNever({typeName:ZodFirstPartyTypeKind.ZodNever,...processCreateParams(params)});class ZodVoid extends ZodType{_parse(input){if(this._getType(input)!==ZodParsedType.undefined){const ctx=this._getOrReturnCtx(input);return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.void,received:ctx.parsedType}),INVALID}return OK(input.data)}}ZodVoid.create=params=>new ZodVoid({typeName:ZodFirstPartyTypeKind.ZodVoid,...processCreateParams(params)});class ZodArray extends ZodType{_parse(input){const{ctx,status}=this._processInputParams(input),def=this._def;if(ctx.parsedType!==ZodParsedType.array)return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.array,received:ctx.parsedType}),INVALID;if(null!==def.exactLength){const tooBig=ctx.data.length>def.exactLength.value,tooSmall=ctx.data.length<def.exactLength.value;(tooBig||tooSmall)&&(addIssueToContext(ctx,{code:tooBig?ZodIssueCode.too_big:ZodIssueCode.too_small,minimum:tooSmall?def.exactLength.value:void 0,maximum:tooBig?def.exactLength.value:void 0,type:"array",inclusive:!0,exact:!0,message:def.exactLength.message}),status.dirty())}if(null!==def.minLength&&ctx.data.length<def.minLength.value&&(addIssueToContext(ctx,{code:ZodIssueCode.too_small,minimum:def.minLength.value,type:"array",inclusive:!0,exact:!1,message:def.minLength.message}),status.dirty()),null!==def.maxLength&&ctx.data.length>def.maxLength.value&&(addIssueToContext(ctx,{code:ZodIssueCode.too_big,maximum:def.maxLength.value,type:"array",inclusive:!0,exact:!1,message:def.maxLength.message}),status.dirty()),ctx.common.async)return Promise.all([...ctx.data].map(((item,i)=>def.type._parseAsync(new ParseInputLazyPath(ctx,item,ctx.path,i))))).then((result=>ParseStatus.mergeArray(status,result)));const result=[...ctx.data].map(((item,i)=>def.type._parseSync(new ParseInputLazyPath(ctx,item,ctx.path,i))));return ParseStatus.mergeArray(status,result)}get element(){return this._def.type}min(minLength,message){return new ZodArray({...this._def,minLength:{value:minLength,message:errorUtil.toString(message)}})}max(maxLength,message){return new ZodArray({...this._def,maxLength:{value:maxLength,message:errorUtil.toString(message)}})}length(len,message){return new ZodArray({...this._def,exactLength:{value:len,message:errorUtil.toString(message)}})}nonempty(message){return this.min(1,message)}}function deepPartialify(schema){if(schema instanceof ZodObject){const newShape={};for(const key in schema.shape){const fieldSchema=schema.shape[key];newShape[key]=ZodOptional.create(deepPartialify(fieldSchema))}return new ZodObject({...schema._def,shape:()=>newShape})}return schema instanceof ZodArray?new ZodArray({...schema._def,type:deepPartialify(schema.element)}):schema instanceof ZodOptional?ZodOptional.create(deepPartialify(schema.unwrap())):schema instanceof ZodNullable?ZodNullable.create(deepPartialify(schema.unwrap())):schema instanceof ZodTuple?ZodTuple.create(schema.items.map((item=>deepPartialify(item)))):schema}ZodArray.create=(schema,params)=>new ZodArray({type:schema,minLength:null,maxLength:null,exactLength:null,typeName:ZodFirstPartyTypeKind.ZodArray,...processCreateParams(params)});class ZodObject extends ZodType{constructor(){super(...arguments),this._cached=null,this.nonstrict=this.passthrough,this.augment=this.extend}_getCached(){if(null!==this._cached)return this._cached;const shape=this._def.shape(),keys=util.objectKeys(shape);return this._cached={shape,keys}}_parse(input){if(this._getType(input)!==ZodParsedType.object){const ctx=this._getOrReturnCtx(input);return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.object,received:ctx.parsedType}),INVALID}const{status,ctx}=this._processInputParams(input),{shape,keys:shapeKeys}=this._getCached(),extraKeys=[];if(!(this._def.catchall instanceof ZodNever&&"strip"===this._def.unknownKeys))for(const key in ctx.data)shapeKeys.includes(key)||extraKeys.push(key);const pairs=[];for(const key of shapeKeys){const keyValidator=shape[key],value=ctx.data[key];pairs.push({key:{status:"valid",value:key},value:keyValidator._parse(new ParseInputLazyPath(ctx,value,ctx.path,key)),alwaysSet:key in ctx.data})}if(this._def.catchall instanceof ZodNever){const unknownKeys=this._def.unknownKeys;if("passthrough"===unknownKeys)for(const key of extraKeys)pairs.push({key:{status:"valid",value:key},value:{status:"valid",value:ctx.data[key]}});else if("strict"===unknownKeys)extraKeys.length>0&&(addIssueToContext(ctx,{code:ZodIssueCode.unrecognized_keys,keys:extraKeys}),status.dirty());else if("strip"!==unknownKeys)throw new Error("Internal ZodObject error: invalid unknownKeys value.")}else{const catchall=this._def.catchall;for(const key of extraKeys){const value=ctx.data[key];pairs.push({key:{status:"valid",value:key},value:catchall._parse(new ParseInputLazyPath(ctx,value,ctx.path,key)),alwaysSet:key in ctx.data})}}return ctx.common.async?Promise.resolve().then((async()=>{const syncPairs=[];for(const pair of pairs){const key=await pair.key,value=await pair.value;syncPairs.push({key,value,alwaysSet:pair.alwaysSet})}return syncPairs})).then((syncPairs=>ParseStatus.mergeObjectSync(status,syncPairs))):ParseStatus.mergeObjectSync(status,pairs)}get shape(){return this._def.shape()}strict(message){return errorUtil.errToObj,new ZodObject({...this._def,unknownKeys:"strict",...void 0!==message?{errorMap:(issue,ctx)=>{var _a,_b,_c,_d;const defaultError=null!==(_c=null===(_b=(_a=this._def).errorMap)||void 0===_b?void 0:_b.call(_a,issue,ctx).message)&&void 0!==_c?_c:ctx.defaultError;return"unrecognized_keys"===issue.code?{message:null!==(_d=errorUtil.errToObj(message).message)&&void 0!==_d?_d:defaultError}:{message:defaultError}}}:{}})}strip(){return new ZodObject({...this._def,unknownKeys:"strip"})}passthrough(){return new ZodObject({...this._def,unknownKeys:"passthrough"})}extend(augmentation){return new ZodObject({...this._def,shape:()=>({...this._def.shape(),...augmentation})})}merge(merging){return new ZodObject({unknownKeys:merging._def.unknownKeys,catchall:merging._def.catchall,shape:()=>({...this._def.shape(),...merging._def.shape()}),typeName:ZodFirstPartyTypeKind.ZodObject})}setKey(key,schema){return this.augment({[key]:schema})}catchall(index){return new ZodObject({...this._def,catchall:index})}pick(mask){const shape={};return util.objectKeys(mask).forEach((key=>{mask[key]&&this.shape[key]&&(shape[key]=this.shape[key])})),new ZodObject({...this._def,shape:()=>shape})}omit(mask){const shape={};return util.objectKeys(this.shape).forEach((key=>{mask[key]||(shape[key]=this.shape[key])})),new ZodObject({...this._def,shape:()=>shape})}deepPartial(){return deepPartialify(this)}partial(mask){const newShape={};return util.objectKeys(this.shape).forEach((key=>{const fieldSchema=this.shape[key];mask&&!mask[key]?newShape[key]=fieldSchema:newShape[key]=fieldSchema.optional()})),new ZodObject({...this._def,shape:()=>newShape})}required(mask){const newShape={};return util.objectKeys(this.shape).forEach((key=>{if(mask&&!mask[key])newShape[key]=this.shape[key];else{let newField=this.shape[key];for(;newField instanceof ZodOptional;)newField=newField._def.innerType;newShape[key]=newField}})),new ZodObject({...this._def,shape:()=>newShape})}keyof(){return createZodEnum(util.objectKeys(this.shape))}}ZodObject.create=(shape,params)=>new ZodObject({shape:()=>shape,unknownKeys:"strip",catchall:ZodNever.create(),typeName:ZodFirstPartyTypeKind.ZodObject,...processCreateParams(params)}),ZodObject.strictCreate=(shape,params)=>new ZodObject({shape:()=>shape,unknownKeys:"strict",catchall:ZodNever.create(),typeName:ZodFirstPartyTypeKind.ZodObject,...processCreateParams(params)}),ZodObject.lazycreate=(shape,params)=>new ZodObject({shape,unknownKeys:"strip",catchall:ZodNever.create(),typeName:ZodFirstPartyTypeKind.ZodObject,...processCreateParams(params)});class ZodUnion extends ZodType{_parse(input){const{ctx}=this._processInputParams(input),options=this._def.options;if(ctx.common.async)return Promise.all(options.map((async option=>{const childCtx={...ctx,common:{...ctx.common,issues:[]},parent:null};return{result:await option._parseAsync({data:ctx.data,path:ctx.path,parent:childCtx}),ctx:childCtx}}))).then((function handleResults(results){for(const result of results)if("valid"===result.result.status)return result.result;for(const result of results)if("dirty"===result.result.status)return ctx.common.issues.push(...result.ctx.common.issues),result.result;const unionErrors=results.map((result=>new ZodError(result.ctx.common.issues)));return addIssueToContext(ctx,{code:ZodIssueCode.invalid_union,unionErrors}),INVALID}));{let dirty;const issues=[];for(const option of options){const childCtx={...ctx,common:{...ctx.common,issues:[]},parent:null},result=option._parseSync({data:ctx.data,path:ctx.path,parent:childCtx});if("valid"===result.status)return result;"dirty"!==result.status||dirty||(dirty={result,ctx:childCtx}),childCtx.common.issues.length&&issues.push(childCtx.common.issues)}if(dirty)return ctx.common.issues.push(...dirty.ctx.common.issues),dirty.result;const unionErrors=issues.map((issues=>new ZodError(issues)));return addIssueToContext(ctx,{code:ZodIssueCode.invalid_union,unionErrors}),INVALID}}get options(){return this._def.options}}ZodUnion.create=(types,params)=>new ZodUnion({options:types,typeName:ZodFirstPartyTypeKind.ZodUnion,...processCreateParams(params)});const getDiscriminator=type=>type instanceof ZodLazy?getDiscriminator(type.schema):type instanceof ZodEffects?getDiscriminator(type.innerType()):type instanceof ZodLiteral?[type.value]:type instanceof ZodEnum?type.options:type instanceof ZodNativeEnum?util.objectValues(type.enum):type instanceof ZodDefault?getDiscriminator(type._def.innerType):type instanceof ZodUndefined?[void 0]:type instanceof ZodNull?[null]:type instanceof ZodOptional?[void 0,...getDiscriminator(type.unwrap())]:type instanceof ZodNullable?[null,...getDiscriminator(type.unwrap())]:type instanceof ZodBranded||type instanceof ZodReadonly?getDiscriminator(type.unwrap()):type instanceof ZodCatch?getDiscriminator(type._def.innerType):[];class ZodDiscriminatedUnion extends ZodType{_parse(input){const{ctx}=this._processInputParams(input);if(ctx.parsedType!==ZodParsedType.object)return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.object,received:ctx.parsedType}),INVALID;const discriminator=this.discriminator,discriminatorValue=ctx.data[discriminator],option=this.optionsMap.get(discriminatorValue);return option?ctx.common.async?option._parseAsync({data:ctx.data,path:ctx.path,parent:ctx}):option._parseSync({data:ctx.data,path:ctx.path,parent:ctx}):(addIssueToContext(ctx,{code:ZodIssueCode.invalid_union_discriminator,options:Array.from(this.optionsMap.keys()),path:[discriminator]}),INVALID)}get discriminator(){return this._def.discriminator}get options(){return this._def.options}get optionsMap(){return this._def.optionsMap}static create(discriminator,options,params){const optionsMap=new Map;for(const type of options){const discriminatorValues=getDiscriminator(type.shape[discriminator]);if(!discriminatorValues.length)throw new Error(`A discriminator value for key \`${discriminator}\` could not be extracted from all schema options`);for(const value of discriminatorValues){if(optionsMap.has(value))throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);optionsMap.set(value,type)}}return new ZodDiscriminatedUnion({typeName:ZodFirstPartyTypeKind.ZodDiscriminatedUnion,discriminator,options,optionsMap,...processCreateParams(params)})}}function mergeValues(a,b){const aType=getParsedType(a),bType=getParsedType(b);if(a===b)return{valid:!0,data:a};if(aType===ZodParsedType.object&&bType===ZodParsedType.object){const bKeys=util.objectKeys(b),sharedKeys=util.objectKeys(a).filter((key=>-1!==bKeys.indexOf(key))),newObj={...a,...b};for(const key of sharedKeys){const sharedValue=mergeValues(a[key],b[key]);if(!sharedValue.valid)return{valid:!1};newObj[key]=sharedValue.data}return{valid:!0,data:newObj}}if(aType===ZodParsedType.array&&bType===ZodParsedType.array){if(a.length!==b.length)return{valid:!1};const newArray=[];for(let index=0;index<a.length;index++){const sharedValue=mergeValues(a[index],b[index]);if(!sharedValue.valid)return{valid:!1};newArray.push(sharedValue.data)}return{valid:!0,data:newArray}}return aType===ZodParsedType.date&&bType===ZodParsedType.date&&+a==+b?{valid:!0,data:a}:{valid:!1}}class ZodIntersection extends ZodType{_parse(input){const{status,ctx}=this._processInputParams(input),handleParsed=(parsedLeft,parsedRight)=>{if(isAborted(parsedLeft)||isAborted(parsedRight))return INVALID;const merged=mergeValues(parsedLeft.value,parsedRight.value);return merged.valid?((isDirty(parsedLeft)||isDirty(parsedRight))&&status.dirty(),{status:status.value,value:merged.data}):(addIssueToContext(ctx,{code:ZodIssueCode.invalid_intersection_types}),INVALID)};return ctx.common.async?Promise.all([this._def.left._parseAsync({data:ctx.data,path:ctx.path,parent:ctx}),this._def.right._parseAsync({data:ctx.data,path:ctx.path,parent:ctx})]).then((([left,right])=>handleParsed(left,right))):handleParsed(this._def.left._parseSync({data:ctx.data,path:ctx.path,parent:ctx}),this._def.right._parseSync({data:ctx.data,path:ctx.path,parent:ctx}))}}ZodIntersection.create=(left,right,params)=>new ZodIntersection({left,right,typeName:ZodFirstPartyTypeKind.ZodIntersection,...processCreateParams(params)});class ZodTuple extends ZodType{_parse(input){const{status,ctx}=this._processInputParams(input);if(ctx.parsedType!==ZodParsedType.array)return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.array,received:ctx.parsedType}),INVALID;if(ctx.data.length<this._def.items.length)return addIssueToContext(ctx,{code:ZodIssueCode.too_small,minimum:this._def.items.length,inclusive:!0,exact:!1,type:"array"}),INVALID;!this._def.rest&&ctx.data.length>this._def.items.length&&(addIssueToContext(ctx,{code:ZodIssueCode.too_big,maximum:this._def.items.length,inclusive:!0,exact:!1,type:"array"}),status.dirty());const items=[...ctx.data].map(((item,itemIndex)=>{const schema=this._def.items[itemIndex]||this._def.rest;return schema?schema._parse(new ParseInputLazyPath(ctx,item,ctx.path,itemIndex)):null})).filter((x=>!!x));return ctx.common.async?Promise.all(items).then((results=>ParseStatus.mergeArray(status,results))):ParseStatus.mergeArray(status,items)}get items(){return this._def.items}rest(rest){return new ZodTuple({...this._def,rest})}}ZodTuple.create=(schemas,params)=>{if(!Array.isArray(schemas))throw new Error("You must pass an array of schemas to z.tuple([ ... ])");return new ZodTuple({items:schemas,typeName:ZodFirstPartyTypeKind.ZodTuple,rest:null,...processCreateParams(params)})};class ZodRecord extends ZodType{get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse(input){const{status,ctx}=this._processInputParams(input);if(ctx.parsedType!==ZodParsedType.object)return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.object,received:ctx.parsedType}),INVALID;const pairs=[],keyType=this._def.keyType,valueType=this._def.valueType;for(const key in ctx.data)pairs.push({key:keyType._parse(new ParseInputLazyPath(ctx,key,ctx.path,key)),value:valueType._parse(new ParseInputLazyPath(ctx,ctx.data[key],ctx.path,key)),alwaysSet:key in ctx.data});return ctx.common.async?ParseStatus.mergeObjectAsync(status,pairs):ParseStatus.mergeObjectSync(status,pairs)}get element(){return this._def.valueType}static create(first,second,third){return new ZodRecord(second instanceof ZodType?{keyType:first,valueType:second,typeName:ZodFirstPartyTypeKind.ZodRecord,...processCreateParams(third)}:{keyType:ZodString.create(),valueType:first,typeName:ZodFirstPartyTypeKind.ZodRecord,...processCreateParams(second)})}}class ZodMap extends ZodType{get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse(input){const{status,ctx}=this._processInputParams(input);if(ctx.parsedType!==ZodParsedType.map)return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.map,received:ctx.parsedType}),INVALID;const keyType=this._def.keyType,valueType=this._def.valueType,pairs=[...ctx.data.entries()].map((([key,value],index)=>({key:keyType._parse(new ParseInputLazyPath(ctx,key,ctx.path,[index,"key"])),value:valueType._parse(new ParseInputLazyPath(ctx,value,ctx.path,[index,"value"]))})));if(ctx.common.async){const finalMap=new Map;return Promise.resolve().then((async()=>{for(const pair of pairs){const key=await pair.key,value=await pair.value;if("aborted"===key.status||"aborted"===value.status)return INVALID;"dirty"!==key.status&&"dirty"!==value.status||status.dirty(),finalMap.set(key.value,value.value)}return{status:status.value,value:finalMap}}))}{const finalMap=new Map;for(const pair of pairs){const key=pair.key,value=pair.value;if("aborted"===key.status||"aborted"===value.status)return INVALID;"dirty"!==key.status&&"dirty"!==value.status||status.dirty(),finalMap.set(key.value,value.value)}return{status:status.value,value:finalMap}}}}ZodMap.create=(keyType,valueType,params)=>new ZodMap({valueType,keyType,typeName:ZodFirstPartyTypeKind.ZodMap,...processCreateParams(params)});class ZodSet extends ZodType{_parse(input){const{status,ctx}=this._processInputParams(input);if(ctx.parsedType!==ZodParsedType.set)return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.set,received:ctx.parsedType}),INVALID;const def=this._def;null!==def.minSize&&ctx.data.size<def.minSize.value&&(addIssueToContext(ctx,{code:ZodIssueCode.too_small,minimum:def.minSize.value,type:"set",inclusive:!0,exact:!1,message:def.minSize.message}),status.dirty()),null!==def.maxSize&&ctx.data.size>def.maxSize.value&&(addIssueToContext(ctx,{code:ZodIssueCode.too_big,maximum:def.maxSize.value,type:"set",inclusive:!0,exact:!1,message:def.maxSize.message}),status.dirty());const valueType=this._def.valueType;function finalizeSet(elements){const parsedSet=new Set;for(const element of elements){if("aborted"===element.status)return INVALID;"dirty"===element.status&&status.dirty(),parsedSet.add(element.value)}return{status:status.value,value:parsedSet}}const elements=[...ctx.data.values()].map(((item,i)=>valueType._parse(new ParseInputLazyPath(ctx,item,ctx.path,i))));return ctx.common.async?Promise.all(elements).then((elements=>finalizeSet(elements))):finalizeSet(elements)}min(minSize,message){return new ZodSet({...this._def,minSize:{value:minSize,message:errorUtil.toString(message)}})}max(maxSize,message){return new ZodSet({...this._def,maxSize:{value:maxSize,message:errorUtil.toString(message)}})}size(size,message){return this.min(size,message).max(size,message)}nonempty(message){return this.min(1,message)}}ZodSet.create=(valueType,params)=>new ZodSet({valueType,minSize:null,maxSize:null,typeName:ZodFirstPartyTypeKind.ZodSet,...processCreateParams(params)});class ZodFunction extends ZodType{constructor(){super(...arguments),this.validate=this.implement}_parse(input){const{ctx}=this._processInputParams(input);if(ctx.parsedType!==ZodParsedType.function)return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.function,received:ctx.parsedType}),INVALID;function makeArgsIssue(args,error){return makeIssue({data:args,path:ctx.path,errorMaps:[ctx.common.contextualErrorMap,ctx.schemaErrorMap,getErrorMap(),errorMap].filter((x=>!!x)),issueData:{code:ZodIssueCode.invalid_arguments,argumentsError:error}})}function makeReturnsIssue(returns,error){return makeIssue({data:returns,path:ctx.path,errorMaps:[ctx.common.contextualErrorMap,ctx.schemaErrorMap,getErrorMap(),errorMap].filter((x=>!!x)),issueData:{code:ZodIssueCode.invalid_return_type,returnTypeError:error}})}const params={errorMap:ctx.common.contextualErrorMap},fn=ctx.data;if(this._def.returns instanceof ZodPromise){const me=this;return OK((async function(...args){const error=new ZodError([]),parsedArgs=await me._def.args.parseAsync(args,params).catch((e=>{throw error.addIssue(makeArgsIssue(args,e)),error})),result=await Reflect.apply(fn,this,parsedArgs);return await me._def.returns._def.type.parseAsync(result,params).catch((e=>{throw error.addIssue(makeReturnsIssue(result,e)),error}))}))}{const me=this;return OK((function(...args){const parsedArgs=me._def.args.safeParse(args,params);if(!parsedArgs.success)throw new ZodError([makeArgsIssue(args,parsedArgs.error)]);const result=Reflect.apply(fn,this,parsedArgs.data),parsedReturns=me._def.returns.safeParse(result,params);if(!parsedReturns.success)throw new ZodError([makeReturnsIssue(result,parsedReturns.error)]);return parsedReturns.data}))}}parameters(){return this._def.args}returnType(){return this._def.returns}args(...items){return new ZodFunction({...this._def,args:ZodTuple.create(items).rest(ZodUnknown.create())})}returns(returnType){return new ZodFunction({...this._def,returns:returnType})}implement(func){return this.parse(func)}strictImplement(func){return this.parse(func)}static create(args,returns,params){return new ZodFunction({args:args||ZodTuple.create([]).rest(ZodUnknown.create()),returns:returns||ZodUnknown.create(),typeName:ZodFirstPartyTypeKind.ZodFunction,...processCreateParams(params)})}}class ZodLazy extends ZodType{get schema(){return this._def.getter()}_parse(input){const{ctx}=this._processInputParams(input);return this._def.getter()._parse({data:ctx.data,path:ctx.path,parent:ctx})}}ZodLazy.create=(getter,params)=>new ZodLazy({getter,typeName:ZodFirstPartyTypeKind.ZodLazy,...processCreateParams(params)});class ZodLiteral extends ZodType{_parse(input){if(input.data!==this._def.value){const ctx=this._getOrReturnCtx(input);return addIssueToContext(ctx,{received:ctx.data,code:ZodIssueCode.invalid_literal,expected:this._def.value}),INVALID}return{status:"valid",value:input.data}}get value(){return this._def.value}}function createZodEnum(values,params){return new ZodEnum({values,typeName:ZodFirstPartyTypeKind.ZodEnum,...processCreateParams(params)})}ZodLiteral.create=(value,params)=>new ZodLiteral({value,typeName:ZodFirstPartyTypeKind.ZodLiteral,...processCreateParams(params)});class ZodEnum extends ZodType{constructor(){super(...arguments),_ZodEnum_cache.set(this,void 0)}_parse(input){if("string"!=typeof input.data){const ctx=this._getOrReturnCtx(input),expectedValues=this._def.values;return addIssueToContext(ctx,{expected:util.joinValues(expectedValues),received:ctx.parsedType,code:ZodIssueCode.invalid_type}),INVALID}if(__classPrivateFieldGet(this,_ZodEnum_cache,"f")||__classPrivateFieldSet(this,_ZodEnum_cache,new Set(this._def.values),"f"),!__classPrivateFieldGet(this,_ZodEnum_cache,"f").has(input.data)){const ctx=this._getOrReturnCtx(input),expectedValues=this._def.values;return addIssueToContext(ctx,{received:ctx.data,code:ZodIssueCode.invalid_enum_value,options:expectedValues}),INVALID}return OK(input.data)}get options(){return this._def.values}get enum(){const enumValues={};for(const val of this._def.values)enumValues[val]=val;return enumValues}get Values(){const enumValues={};for(const val of this._def.values)enumValues[val]=val;return enumValues}get Enum(){const enumValues={};for(const val of this._def.values)enumValues[val]=val;return enumValues}extract(values,newDef=this._def){return ZodEnum.create(values,{...this._def,...newDef})}exclude(values,newDef=this._def){return ZodEnum.create(this.options.filter((opt=>!values.includes(opt))),{...this._def,...newDef})}}_ZodEnum_cache=new WeakMap,ZodEnum.create=createZodEnum;class ZodNativeEnum extends ZodType{constructor(){super(...arguments),_ZodNativeEnum_cache.set(this,void 0)}_parse(input){const nativeEnumValues=util.getValidEnumValues(this._def.values),ctx=this._getOrReturnCtx(input);if(ctx.parsedType!==ZodParsedType.string&&ctx.parsedType!==ZodParsedType.number){const expectedValues=util.objectValues(nativeEnumValues);return addIssueToContext(ctx,{expected:util.joinValues(expectedValues),received:ctx.parsedType,code:ZodIssueCode.invalid_type}),INVALID}if(__classPrivateFieldGet(this,_ZodNativeEnum_cache,"f")||__classPrivateFieldSet(this,_ZodNativeEnum_cache,new Set(util.getValidEnumValues(this._def.values)),"f"),!__classPrivateFieldGet(this,_ZodNativeEnum_cache,"f").has(input.data)){const expectedValues=util.objectValues(nativeEnumValues);return addIssueToContext(ctx,{received:ctx.data,code:ZodIssueCode.invalid_enum_value,options:expectedValues}),INVALID}return OK(input.data)}get enum(){return this._def.values}}_ZodNativeEnum_cache=new WeakMap,ZodNativeEnum.create=(values,params)=>new ZodNativeEnum({values,typeName:ZodFirstPartyTypeKind.ZodNativeEnum,...processCreateParams(params)});class ZodPromise extends ZodType{unwrap(){return this._def.type}_parse(input){const{ctx}=this._processInputParams(input);if(ctx.parsedType!==ZodParsedType.promise&&!1===ctx.common.async)return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.promise,received:ctx.parsedType}),INVALID;const promisified=ctx.parsedType===ZodParsedType.promise?ctx.data:Promise.resolve(ctx.data);return OK(promisified.then((data=>this._def.type.parseAsync(data,{path:ctx.path,errorMap:ctx.common.contextualErrorMap}))))}}ZodPromise.create=(schema,params)=>new ZodPromise({type:schema,typeName:ZodFirstPartyTypeKind.ZodPromise,...processCreateParams(params)});class ZodEffects extends ZodType{innerType(){return this._def.schema}sourceType(){return this._def.schema._def.typeName===ZodFirstPartyTypeKind.ZodEffects?this._def.schema.sourceType():this._def.schema}_parse(input){const{status,ctx}=this._processInputParams(input),effect=this._def.effect||null,checkCtx={addIssue:arg=>{addIssueToContext(ctx,arg),arg.fatal?status.abort():status.dirty()},get path(){return ctx.path}};if(checkCtx.addIssue=checkCtx.addIssue.bind(checkCtx),"preprocess"===effect.type){const processed=effect.transform(ctx.data,checkCtx);if(ctx.common.async)return Promise.resolve(processed).then((async processed=>{if("aborted"===status.value)return INVALID;const result=await this._def.schema._parseAsync({data:processed,path:ctx.path,parent:ctx});return"aborted"===result.status?INVALID:"dirty"===result.status||"dirty"===status.value?DIRTY(result.value):result}));{if("aborted"===status.value)return INVALID;const result=this._def.schema._parseSync({data:processed,path:ctx.path,parent:ctx});return"aborted"===result.status?INVALID:"dirty"===result.status||"dirty"===status.value?DIRTY(result.value):result}}if("refinement"===effect.type){const executeRefinement=acc=>{const result=effect.refinement(acc,checkCtx);if(ctx.common.async)return Promise.resolve(result);if(result instanceof Promise)throw new Error("Async refinement encountered during synchronous parse operation. Use .parseAsync instead.");return acc};if(!1===ctx.common.async){const inner=this._def.schema._parseSync({data:ctx.data,path:ctx.path,parent:ctx});return"aborted"===inner.status?INVALID:("dirty"===inner.status&&status.dirty(),executeRefinement(inner.value),{status:status.value,value:inner.value})}return this._def.schema._parseAsync({data:ctx.data,path:ctx.path,parent:ctx}).then((inner=>"aborted"===inner.status?INVALID:("dirty"===inner.status&&status.dirty(),executeRefinement(inner.value).then((()=>({status:status.value,value:inner.value}))))))}if("transform"===effect.type){if(!1===ctx.common.async){const base=this._def.schema._parseSync({data:ctx.data,path:ctx.path,parent:ctx});if(!isValid(base))return base;const result=effect.transform(base.value,checkCtx);if(result instanceof Promise)throw new Error("Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.");return{status:status.value,value:result}}return this._def.schema._parseAsync({data:ctx.data,path:ctx.path,parent:ctx}).then((base=>isValid(base)?Promise.resolve(effect.transform(base.value,checkCtx)).then((result=>({status:status.value,value:result}))):base))}util.assertNever(effect)}}ZodEffects.create=(schema,effect,params)=>new ZodEffects({schema,typeName:ZodFirstPartyTypeKind.ZodEffects,effect,...processCreateParams(params)}),ZodEffects.createWithPreprocess=(preprocess,schema,params)=>new ZodEffects({schema,effect:{type:"preprocess",transform:preprocess},typeName:ZodFirstPartyTypeKind.ZodEffects,...processCreateParams(params)});class ZodOptional extends ZodType{_parse(input){return this._getType(input)===ZodParsedType.undefined?OK(void 0):this._def.innerType._parse(input)}unwrap(){return this._def.innerType}}ZodOptional.create=(type,params)=>new ZodOptional({innerType:type,typeName:ZodFirstPartyTypeKind.ZodOptional,...processCreateParams(params)});class ZodNullable extends ZodType{_parse(input){return this._getType(input)===ZodParsedType.null?OK(null):this._def.innerType._parse(input)}unwrap(){return this._def.innerType}}ZodNullable.create=(type,params)=>new ZodNullable({innerType:type,typeName:ZodFirstPartyTypeKind.ZodNullable,...processCreateParams(params)});class ZodDefault extends ZodType{_parse(input){const{ctx}=this._processInputParams(input);let data=ctx.data;return ctx.parsedType===ZodParsedType.undefined&&(data=this._def.defaultValue()),this._def.innerType._parse({data,path:ctx.path,parent:ctx})}removeDefault(){return this._def.innerType}}ZodDefault.create=(type,params)=>new ZodDefault({innerType:type,typeName:ZodFirstPartyTypeKind.ZodDefault,defaultValue:"function"==typeof params.default?params.default:()=>params.default,...processCreateParams(params)});class ZodCatch extends ZodType{_parse(input){const{ctx}=this._processInputParams(input),newCtx={...ctx,common:{...ctx.common,issues:[]}},result=this._def.innerType._parse({data:newCtx.data,path:newCtx.path,parent:{...newCtx}});return isAsync(result)?result.then((result=>({status:"valid",value:"valid"===result.status?result.value:this._def.catchValue({get error(){return new ZodError(newCtx.common.issues)},input:newCtx.data})}))):{status:"valid",value:"valid"===result.status?result.value:this._def.catchValue({get error(){return new ZodError(newCtx.common.issues)},input:newCtx.data})}}removeCatch(){return this._def.innerType}}ZodCatch.create=(type,params)=>new ZodCatch({innerType:type,typeName:ZodFirstPartyTypeKind.ZodCatch,catchValue:"function"==typeof params.catch?params.catch:()=>params.catch,...processCreateParams(params)});class ZodNaN extends ZodType{_parse(input){if(this._getType(input)!==ZodParsedType.nan){const ctx=this._getOrReturnCtx(input);return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.nan,received:ctx.parsedType}),INVALID}return{status:"valid",value:input.data}}}ZodNaN.create=params=>new ZodNaN({typeName:ZodFirstPartyTypeKind.ZodNaN,...processCreateParams(params)});const BRAND=Symbol("zod_brand");class ZodBranded extends ZodType{_parse(input){const{ctx}=this._processInputParams(input),data=ctx.data;return this._def.type._parse({data,path:ctx.path,parent:ctx})}unwrap(){return this._def.type}}class ZodPipeline extends ZodType{_parse(input){const{status,ctx}=this._processInputParams(input);if(ctx.common.async){return(async()=>{const inResult=await this._def.in._parseAsync({data:ctx.data,path:ctx.path,parent:ctx});return"aborted"===inResult.status?INVALID:"dirty"===inResult.status?(status.dirty(),DIRTY(inResult.value)):this._def.out._parseAsync({data:inResult.value,path:ctx.path,parent:ctx})})()}{const inResult=this._def.in._parseSync({data:ctx.data,path:ctx.path,parent:ctx});return"aborted"===inResult.status?INVALID:"dirty"===inResult.status?(status.dirty(),{status:"dirty",value:inResult.value}):this._def.out._parseSync({data:inResult.value,path:ctx.path,parent:ctx})}}static create(a,b){return new ZodPipeline({in:a,out:b,typeName:ZodFirstPartyTypeKind.ZodPipeline})}}class ZodReadonly extends ZodType{_parse(input){const result=this._def.innerType._parse(input),freeze=data=>(isValid(data)&&(data.value=Object.freeze(data.value)),data);return isAsync(result)?result.then((data=>freeze(data))):freeze(result)}unwrap(){return this._def.innerType}}function cleanParams(params,data){const p="function"==typeof params?params(data):"string"==typeof params?{message:params}:params;return"string"==typeof p?{message:p}:p}function custom(check,_params={},fatal){return check?ZodAny.create().superRefine(((data,ctx)=>{var _a,_b;const r=check(data);if(r instanceof Promise)return r.then((r=>{var _a,_b;if(!r){const params=cleanParams(_params,data),_fatal=null===(_b=null!==(_a=params.fatal)&&void 0!==_a?_a:fatal)||void 0===_b||_b;ctx.addIssue({code:"custom",...params,fatal:_fatal})}}));if(!r){const params=cleanParams(_params,data),_fatal=null===(_b=null!==(_a=params.fatal)&&void 0!==_a?_a:fatal)||void 0===_b||_b;ctx.addIssue({code:"custom",...params,fatal:_fatal})}})):ZodAny.create()}ZodReadonly.create=(type,params)=>new ZodReadonly({innerType:type,typeName:ZodFirstPartyTypeKind.ZodReadonly,...processCreateParams(params)});const late={object:ZodObject.lazycreate};var ZodFirstPartyTypeKind;!function(ZodFirstPartyTypeKind){ZodFirstPartyTypeKind.ZodString="ZodString",ZodFirstPartyTypeKind.ZodNumber="ZodNumber",ZodFirstPartyTypeKind.ZodNaN="ZodNaN",ZodFirstPartyTypeKind.ZodBigInt="ZodBigInt",ZodFirstPartyTypeKind.ZodBoolean="ZodBoolean",ZodFirstPartyTypeKind.ZodDate="ZodDate",ZodFirstPartyTypeKind.ZodSymbol="ZodSymbol",ZodFirstPartyTypeKind.ZodUndefined="ZodUndefined",ZodFirstPartyTypeKind.ZodNull="ZodNull",ZodFirstPartyTypeKind.ZodAny="ZodAny",ZodFirstPartyTypeKind.ZodUnknown="ZodUnknown",ZodFirstPartyTypeKind.ZodNever="ZodNever",ZodFirstPartyTypeKind.ZodVoid="ZodVoid",ZodFirstPartyTypeKind.ZodArray="ZodArray",ZodFirstPartyTypeKind.ZodObject="ZodObject",ZodFirstPartyTypeKind.ZodUnion="ZodUnion",ZodFirstPartyTypeKind.ZodDiscriminatedUnion="ZodDiscriminatedUnion",ZodFirstPartyTypeKind.ZodIntersection="ZodIntersection",ZodFirstPartyTypeKind.ZodTuple="ZodTuple",ZodFirstPartyTypeKind.ZodRecord="ZodRecord",ZodFirstPartyTypeKind.ZodMap="ZodMap",ZodFirstPartyTypeKind.ZodSet="ZodSet",ZodFirstPartyTypeKind.ZodFunction="ZodFunction",ZodFirstPartyTypeKind.ZodLazy="ZodLazy",ZodFirstPartyTypeKind.ZodLiteral="ZodLiteral",ZodFirstPartyTypeKind.ZodEnum="ZodEnum",ZodFirstPartyTypeKind.ZodEffects="ZodEffects",ZodFirstPartyTypeKind.ZodNativeEnum="ZodNativeEnum",ZodFirstPartyTypeKind.ZodOptional="ZodOptional",ZodFirstPartyTypeKind.ZodNullable="ZodNullable",ZodFirstPartyTypeKind.ZodDefault="ZodDefault",ZodFirstPartyTypeKind.ZodCatch="ZodCatch",ZodFirstPartyTypeKind.ZodPromise="ZodPromise",ZodFirstPartyTypeKind.ZodBranded="ZodBranded",ZodFirstPartyTypeKind.ZodPipeline="ZodPipeline",ZodFirstPartyTypeKind.ZodReadonly="ZodReadonly"}(ZodFirstPartyTypeKind||(ZodFirstPartyTypeKind={}));const stringType=ZodString.create,numberType=ZodNumber.create,nanType=ZodNaN.create,bigIntType=ZodBigInt.create,booleanType=ZodBoolean.create,dateType=ZodDate.create,symbolType=ZodSymbol.create,undefinedType=ZodUndefined.create,nullType=ZodNull.create,anyType=ZodAny.create,unknownType=ZodUnknown.create,neverType=ZodNever.create,voidType=ZodVoid.create,arrayType=ZodArray.create,objectType=ZodObject.create,strictObjectType=ZodObject.strictCreate,unionType=ZodUnion.create,discriminatedUnionType=ZodDiscriminatedUnion.create,intersectionType=ZodIntersection.create,tupleType=ZodTuple.create,recordType=ZodRecord.create,mapType=ZodMap.create,setType=ZodSet.create,functionType=ZodFunction.create,lazyType=ZodLazy.create,literalType=ZodLiteral.create,enumType=ZodEnum.create,nativeEnumType=ZodNativeEnum.create,promiseType=ZodPromise.create,effectsType=ZodEffects.create,optionalType=ZodOptional.create,nullableType=ZodNullable.create,preprocessType=ZodEffects.createWithPreprocess,pipelineType=ZodPipeline.create,coerce={string:arg=>ZodString.create({...arg,coerce:!0}),number:arg=>ZodNumber.create({...arg,coerce:!0}),boolean:arg=>ZodBoolean.create({...arg,coerce:!0}),bigint:arg=>ZodBigInt.create({...arg,coerce:!0}),date:arg=>ZodDate.create({...arg,coerce:!0})},NEVER=INVALID;var z=Object.freeze({__proto__:null,defaultErrorMap:errorMap,setErrorMap:function setErrorMap(map){overrideErrorMap=map},getErrorMap,makeIssue,EMPTY_PATH:[],addIssueToContext,ParseStatus,INVALID,DIRTY,OK,isAborted,isDirty,isValid,isAsync,get util(){return util},get objectUtil(){return objectUtil},ZodParsedType,getParsedType,ZodType,datetimeRegex,ZodString,ZodNumber,ZodBigInt,ZodBoolean,ZodDate,ZodSymbol,ZodUndefined,ZodNull,ZodAny,ZodUnknown,ZodNever,ZodVoid,ZodArray,ZodObject,ZodUnion,ZodDiscriminatedUnion,ZodIntersection,ZodTuple,ZodRecord,ZodMap,ZodSet,ZodFunction,ZodLazy,ZodLiteral,ZodEnum,ZodNativeEnum,ZodPromise,ZodEffects,ZodTransformer:ZodEffects,ZodOptional,ZodNullable,ZodDefault,ZodCatch,ZodNaN,BRAND,ZodBranded,ZodPipeline,ZodReadonly,custom,Schema:ZodType,ZodSchema:ZodType,late,get ZodFirstPartyTypeKind(){return ZodFirstPartyTypeKind},coerce,any:anyType,array:arrayType,bigint:bigIntType,boolean:booleanType,date:dateType,discriminatedUnion:discriminatedUnionType,effect:effectsType,enum:enumType,function:functionType,instanceof:(cls,params={message:`Input not instance of ${cls.name}`})=>custom((data=>data instanceof cls),params),intersection:intersectionType,lazy:lazyType,literal:literalType,map:mapType,nan:nanType,nativeEnum:nativeEnumType,never:neverType,null:nullType,nullable:nullableType,number:numberType,object:objectType,oboolean:()=>booleanType().optional(),onumber:()=>numberType().optional(),optional:optionalType,ostring:()=>stringType().optional(),pipeline:pipelineType,preprocess:preprocessType,promise:promiseType,record:recordType,set:setType,strictObject:strictObjectType,string:stringType,symbol:symbolType,transformer:effectsType,tuple:tupleType,undefined:undefinedType,union:unionType,unknown:unknownType,void:voidType,NEVER,ZodIssueCode,quotelessJson:obj=>JSON.stringify(obj,null,2).replace(/"([^"]+)":/g,"$1:"),ZodError})}}]);